02-12-2023 09:55:45.297 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 898 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
02-12-2023 09:55:45.306 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
02-12-2023 09:55:46.470 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02-12-2023 09:55:46.567 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 85 ms. Found 5 JPA repository interfaces.
02-12-2023 09:55:47.232 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
02-12-2023 09:55:47.246 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
02-12-2023 09:55:47.246 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
02-12-2023 09:55:47.376 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
02-12-2023 09:55:47.376 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1946 ms
02-12-2023 09:55:47.407 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
02-12-2023 09:55:47.727 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
02-12-2023 09:55:47.732 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
02-12-2023 09:55:47.747 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
02-12-2023 09:55:48.001 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
02-12-2023 09:55:48.311 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 09:55:48.313 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 09:55:48.317 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 09:55:48.320 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 09:55:48.325 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 09:55:48.326 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
02-12-2023 09:55:48.341 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
02-12-2023 09:55:48.344 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 09:55:48.345 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
02-12-2023 09:55:48.348 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 09:55:48.349 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 09:55:48.430 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 09:55:48.431 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 30ms
02-12-2023 09:55:48.435 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 09:55:48.436 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 09:55:48.441 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 09:55:48.442 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 4ms
02-12-2023 09:55:48.444 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 09:55:48.452 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 09:55:48.453 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 8ms
02-12-2023 09:55:48.456 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 09:55:48.461 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 09:55:48.462 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 5ms
02-12-2023 09:55:48.464 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 09:55:48.468 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 09:55:48.468 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 3ms
02-12-2023 09:55:48.470 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 09:55:48.473 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 09:55:48.473 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 2ms
02-12-2023 09:55:48.474 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 09:55:48.477 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 09:55:48.478 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 2ms
02-12-2023 09:55:48.479 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 09:55:48.481 [main] INFO  liquibase.log - Update command completed successfully.
02-12-2023 09:55:48.483 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 09:55:48.483 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
02-12-2023 09:55:48.576 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
02-12-2023 09:55:48.670 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
02-12-2023 09:55:48.674 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
02-12-2023 09:55:49.081 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
02-12-2023 09:55:49.153 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
02-12-2023 09:55:50.282 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02-12-2023 09:55:50.317 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 09:55:50.934 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02-12-2023 09:55:51.398 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
02-12-2023 09:55:51.420 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 6.669 seconds (process running for 8.302)
02-12-2023 09:55:59.122 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 09:55:59.125 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
02-12-2023 09:55:59.127 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
02-12-2023 10:01:14.084 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 981 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
02-12-2023 10:01:14.087 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
02-12-2023 10:01:14.869 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02-12-2023 10:01:14.953 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 72 ms. Found 5 JPA repository interfaces.
02-12-2023 10:01:15.638 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
02-12-2023 10:01:15.650 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
02-12-2023 10:01:15.651 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
02-12-2023 10:01:15.755 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
02-12-2023 10:01:15.756 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1615 ms
02-12-2023 10:01:15.799 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
02-12-2023 10:01:16.132 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
02-12-2023 10:01:16.134 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
02-12-2023 10:01:16.147 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
02-12-2023 10:01:16.324 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
02-12-2023 10:01:16.567 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:01:16.570 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:01:16.574 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:01:16.577 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:01:16.581 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:01:16.581 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
02-12-2023 10:01:16.591 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
02-12-2023 10:01:16.594 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:01:16.595 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
02-12-2023 10:01:16.597 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:01:16.598 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:01:16.654 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:01:16.655 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 26ms
02-12-2023 10:01:16.659 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:01:16.660 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:01:16.666 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:01:16.667 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 4ms
02-12-2023 10:01:16.668 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:01:16.672 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:01:16.673 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 5ms
02-12-2023 10:01:16.674 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:01:16.677 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:01:16.678 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 2ms
02-12-2023 10:01:16.679 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:01:16.684 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:01:16.685 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 4ms
02-12-2023 10:01:16.686 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:01:16.688 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:01:16.689 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 3ms
02-12-2023 10:01:16.690 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:01:16.693 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:01:16.693 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 2ms
02-12-2023 10:01:16.694 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:01:16.695 [main] INFO  liquibase.log - Update command completed successfully.
02-12-2023 10:01:16.697 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:01:16.698 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
02-12-2023 10:01:16.808 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
02-12-2023 10:01:16.912 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
02-12-2023 10:01:16.915 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
02-12-2023 10:01:17.332 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
02-12-2023 10:01:17.414 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
02-12-2023 10:01:18.733 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02-12-2023 10:01:18.770 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 10:01:19.309 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02-12-2023 10:01:19.670 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
02-12-2023 10:01:19.682 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 6.335 seconds (process running for 7.095)
02-12-2023 10:01:30.218 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:01:30.231 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:01:30.239 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:01:30.262 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:01:30.292 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:01:30.298 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:01:30.299 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:02:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:02:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:02:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:02:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:02:00.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:02:00.020 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:02:00.022 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:02:00.916 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
02-12-2023 10:02:00.916 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
02-12-2023 10:02:00.917 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 1 ms
02-12-2023 10:02:01.168 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:02:01.174 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
02-12-2023 10:02:01.176 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:02:01.179 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.amount,t1_0.currency,t1_0.last_updated from transaction_fees t1_0 where t1_0.currency=?
02-12-2023 10:02:01.189 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into transactions (account_id,amount,created,transaction_type,id) values (?,?,?,?,default)
02-12-2023 10:02:01.195 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into transactions (account_id,amount,created,transaction_type,id) values (?,?,?,?,default)
02-12-2023 10:02:01.197 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:02:01.199 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:02:01.200 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update transaction_fees set amount=?,currency=?,last_updated=? where id=?
02-12-2023 10:02:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:02:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:02:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:02:30.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:02:30.020 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:02:30.022 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:02:30.036 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:03:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:03:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:03:00.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:03:00.021 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:03:00.024 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:03:00.026 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:03:00.028 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:03:03.218 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 order by t1_0.created desc offset ? rows fetch first ? rows only
02-12-2023 10:03:03.220 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:03:03.221 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:03:03.222 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:03:03.224 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:03:03.225 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:03:30.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:03:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:03:30.054 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:03:30.055 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:03:30.056 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:03:30.058 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:03:30.059 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:04:00.004 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:04:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:04:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:04:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:04:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:04:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:04:00.019 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:04:04.870 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 10:04:04.875 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
02-12-2023 10:04:04.880 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
02-12-2023 10:13:33.415 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 1181 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
02-12-2023 10:13:33.419 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
02-12-2023 10:13:34.677 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02-12-2023 10:13:34.770 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 81 ms. Found 5 JPA repository interfaces.
02-12-2023 10:13:35.881 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
02-12-2023 10:13:35.895 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
02-12-2023 10:13:35.895 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
02-12-2023 10:13:36.011 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
02-12-2023 10:13:36.011 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 2491 ms
02-12-2023 10:13:36.050 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
02-12-2023 10:13:36.357 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
02-12-2023 10:13:36.360 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
02-12-2023 10:13:36.373 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
02-12-2023 10:13:36.595 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
02-12-2023 10:13:36.858 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:13:36.862 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:13:36.867 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:13:36.870 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:13:36.875 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:13:36.876 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
02-12-2023 10:13:36.888 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
02-12-2023 10:13:36.892 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:13:36.893 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
02-12-2023 10:13:36.895 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:13:36.896 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:13:37.029 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:13:37.030 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 76ms
02-12-2023 10:13:37.074 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:13:37.076 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:13:37.084 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:13:37.086 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 8ms
02-12-2023 10:13:37.089 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:13:37.101 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:13:37.104 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 13ms
02-12-2023 10:13:37.105 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:13:37.110 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:13:37.112 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 4ms
02-12-2023 10:13:37.116 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:13:37.122 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:13:37.123 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 6ms
02-12-2023 10:13:37.125 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:13:37.135 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:13:37.139 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 13ms
02-12-2023 10:13:37.150 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:13:37.158 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:13:37.161 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 8ms
02-12-2023 10:13:37.168 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:13:37.173 [main] INFO  liquibase.log - Update command completed successfully.
02-12-2023 10:13:37.175 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:13:37.176 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
02-12-2023 10:13:37.350 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
02-12-2023 10:13:37.518 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
02-12-2023 10:13:37.525 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
02-12-2023 10:13:38.211 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
02-12-2023 10:13:38.325 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
02-12-2023 10:13:39.699 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02-12-2023 10:13:39.738 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 10:13:40.390 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02-12-2023 10:13:40.770 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
02-12-2023 10:13:40.794 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 8.141 seconds (process running for 9.038)
02-12-2023 10:14:00.214 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:14:00.232 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:14:00.243 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:14:00.272 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:14:00.310 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:14:00.318 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:14:00.319 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:14:22.954 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
02-12-2023 10:14:22.955 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
02-12-2023 10:14:22.957 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 2 ms
02-12-2023 10:14:23.251 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:14:23.261 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into accounts (account_type,balance,created,currency_code,interest_compounding_period,interest_rate,last_interest_application,user_id,id) values (?,?,?,?,?,?,?,?,default)
02-12-2023 10:14:23.264 [http-nio-8080-exec-2] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: 23505, SQLState: 23505
02-12-2023 10:14:23.264 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - Нарушение уникального индекса или первичного ключа: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:1 */ CAST(2 AS BIGINT), 'USDT', 'SAVING')"
Unique index or primary key violation: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:1 */ CAST(2 AS BIGINT), 'USDT', 'SAVING')"; SQL statement:
insert into accounts (account_type,balance,created,currency_code,interest_compounding_period,interest_rate,last_interest_application,user_id,id) values (?,?,?,?,?,?,?,?,default) [23505-214]
02-12-2023 10:14:23.282 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: could not execute statement [Нарушение уникального индекса или первичного ключа: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:1 */ CAST(2 AS BIGINT), 'USDT', 'SAVING')"
Unique index or primary key violation: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:1 */ CAST(2 AS BIGINT), 'USDT', 'SAVING')"; SQL statement:
insert into accounts (account_type,balance,created,currency_code,interest_compounding_period,interest_rate,last_interest_application,user_id,id) values (?,?,?,?,?,?,?,?,default) [23505-214]] [insert into accounts (account_type,balance,created,currency_code,interest_compounding_period,interest_rate,last_interest_application,user_id,id) values (?,?,?,?,?,?,?,?,default)]; SQL [insert into accounts (account_type,balance,created,currency_code,interest_compounding_period,interest_rate,last_interest_application,user_id,id) values (?,?,?,?,?,?,?,?,default)]; constraint ["PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:1 */ CAST(2 AS BIGINT), 'USDT', 'SAVING')"; SQL statement:
insert into accounts (account_type,balance,created,currency_code,interest_compounding_period,interest_rate,last_interest_application,user_id,id) values (?,?,?,?,?,?,?,?,default) [23505-214]]] with root cause
org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Нарушение уникального индекса или первичного ключа: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:1 */ CAST(2 AS BIGINT), 'USDT', 'SAVING')"
Unique index or primary key violation: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:1 */ CAST(2 AS BIGINT), 'USDT', 'SAVING')"; SQL statement:
insert into accounts (account_type,balance,created,currency_code,interest_compounding_period,interest_rate,last_interest_application,user_id,id) values (?,?,?,?,?,?,?,?,default) [23505-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:508)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.index.Index.getDuplicateKeyException(Index.java:525)
	at org.h2.mvstore.db.MVSecondaryIndex.checkUnique(MVSecondaryIndex.java:223)
	at org.h2.mvstore.db.MVSecondaryIndex.add(MVSecondaryIndex.java:184)
	at org.h2.mvstore.db.MVTable.addRow(MVTable.java:519)
	at org.h2.command.dml.Insert.insertRows(Insert.java:174)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.CommandContainer.executeUpdateWithGeneratedKeys(CommandContainer.java:242)
	at org.h2.command.CommandContainer.update(CommandContainer.java:163)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:209)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:169)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:275)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:171)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2780)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:676)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:363)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:277)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:180)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:140)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:755)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:739)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy118.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy118.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy2/jdk.proxy2.$Proxy123.save(Unknown Source)
	at com.example.cryptoservice.service.AccountServiceImpl.createAcc(AccountServiceImpl.java:24)
	at com.example.cryptoservice.controller.AccountController.createAcc(AccountController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
02-12-2023 10:14:30.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:14:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:14:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:14:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:14:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:14:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:14:30.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:15:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:15:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:15:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:15:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:15:00.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:15:00.020 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:15:00.022 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:15:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:15:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:15:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:15:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:15:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:15:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:15:30.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:15:58.560 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 10:15:58.563 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
02-12-2023 10:15:58.565 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
02-12-2023 10:17:33.025 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 1229 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
02-12-2023 10:17:33.029 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
02-12-2023 10:17:34.023 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02-12-2023 10:17:34.224 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 168 ms. Found 5 JPA repository interfaces.
02-12-2023 10:17:35.847 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
02-12-2023 10:17:35.858 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
02-12-2023 10:17:35.858 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
02-12-2023 10:17:35.952 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
02-12-2023 10:17:35.952 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 2834 ms
02-12-2023 10:17:35.979 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
02-12-2023 10:17:36.279 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
02-12-2023 10:17:36.281 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
02-12-2023 10:17:36.292 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
02-12-2023 10:17:36.474 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
02-12-2023 10:17:36.710 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:17:36.713 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:17:36.719 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:17:36.722 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:17:36.726 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:17:36.727 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
02-12-2023 10:17:36.739 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
02-12-2023 10:17:36.743 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:17:36.744 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
02-12-2023 10:17:36.745 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:17:36.746 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:17:36.846 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:17:36.847 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 30ms
02-12-2023 10:17:36.851 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:17:36.852 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:17:36.855 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:17:36.856 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 2ms
02-12-2023 10:17:36.857 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:17:36.861 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:17:36.862 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 3ms
02-12-2023 10:17:36.863 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:17:36.866 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:17:36.867 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 3ms
02-12-2023 10:17:36.868 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:17:36.872 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:17:36.872 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 3ms
02-12-2023 10:17:36.873 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:17:36.876 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:17:36.877 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 2ms
02-12-2023 10:17:36.878 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:17:36.882 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:17:36.883 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 3ms
02-12-2023 10:17:36.884 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:17:36.885 [main] INFO  liquibase.log - Update command completed successfully.
02-12-2023 10:17:36.886 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:17:36.887 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
02-12-2023 10:17:36.977 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
02-12-2023 10:17:37.049 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
02-12-2023 10:17:37.052 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
02-12-2023 10:17:37.442 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
02-12-2023 10:17:37.501 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
02-12-2023 10:17:38.701 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02-12-2023 10:17:38.743 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 10:17:39.331 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02-12-2023 10:17:39.710 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
02-12-2023 10:17:39.724 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 7.294 seconds (process running for 8.289)
02-12-2023 10:17:51.166 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
02-12-2023 10:17:51.167 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
02-12-2023 10:17:51.168 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 1 ms
02-12-2023 10:17:51.686 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:17:51.762 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into accounts (account_type,balance,created,currency_code,interest_compounding_period,interest_rate,last_interest_application,user_id,id) values (?,?,?,?,?,?,?,?,default)
02-12-2023 10:17:51.767 [http-nio-8080-exec-2] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: 23505, SQLState: 23505
02-12-2023 10:17:51.767 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - Нарушение уникального индекса или первичного ключа: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:1 */ CAST(2 AS BIGINT), 'USDT', 'SAVING')"
Unique index or primary key violation: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:1 */ CAST(2 AS BIGINT), 'USDT', 'SAVING')"; SQL statement:
insert into accounts (account_type,balance,created,currency_code,interest_compounding_period,interest_rate,last_interest_application,user_id,id) values (?,?,?,?,?,?,?,?,default) [23505-214]
02-12-2023 10:17:51.817 [http-nio-8080-exec-2] ERROR c.e.c.e.ExceptionResolver.jdbcSQLIntegrityConstraintViolationException - could not execute statement [Нарушение уникального индекса или первичного ключа: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:1 */ CAST(2 AS BIGINT), 'USDT', 'SAVING')"
Unique index or primary key violation: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:1 */ CAST(2 AS BIGINT), 'USDT', 'SAVING')"; SQL statement:
insert into accounts (account_type,balance,created,currency_code,interest_compounding_period,interest_rate,last_interest_application,user_id,id) values (?,?,?,?,?,?,?,?,default) [23505-214]] [insert into accounts (account_type,balance,created,currency_code,interest_compounding_period,interest_rate,last_interest_application,user_id,id) values (?,?,?,?,?,?,?,?,default)]; SQL [insert into accounts (account_type,balance,created,currency_code,interest_compounding_period,interest_rate,last_interest_application,user_id,id) values (?,?,?,?,?,?,?,?,default)]; constraint ["PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:1 */ CAST(2 AS BIGINT), 'USDT', 'SAVING')"; SQL statement:
insert into accounts (account_type,balance,created,currency_code,interest_compounding_period,interest_rate,last_interest_application,user_id,id) values (?,?,?,?,?,?,?,?,default) [23505-214]]
02-12-2023 10:18:00.128 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:18:00.132 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:18:00.134 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:18:00.139 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:18:00.161 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:18:00.164 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:18:00.166 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:18:30.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:18:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:18:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:18:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:18:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:18:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:18:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:19:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:19:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:19:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:19:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:19:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:19:00.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:19:00.020 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:19:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:19:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:19:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:19:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:19:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:19:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:19:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:20:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:20:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:20:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:20:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:20:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:20:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:20:00.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:20:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:20:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:20:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:20:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:20:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:20:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:20:30.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:21:00.032 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:21:00.043 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:21:00.046 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:21:00.050 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:21:00.054 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:21:00.057 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:21:00.058 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:21:35.014 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 1280 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
02-12-2023 10:21:35.020 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
02-12-2023 10:21:35.773 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02-12-2023 10:21:35.860 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 75 ms. Found 5 JPA repository interfaces.
02-12-2023 10:21:36.515 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
02-12-2023 10:21:36.530 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
02-12-2023 10:21:36.531 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
02-12-2023 10:21:36.620 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
02-12-2023 10:21:36.621 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1544 ms
02-12-2023 10:21:36.656 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
02-12-2023 10:21:36.907 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
02-12-2023 10:21:36.909 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
02-12-2023 10:21:36.920 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
02-12-2023 10:21:37.117 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
02-12-2023 10:21:37.378 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:21:37.380 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:21:37.384 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:21:37.387 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:21:37.391 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:21:37.392 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
02-12-2023 10:21:37.403 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
02-12-2023 10:21:37.407 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:21:37.408 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
02-12-2023 10:21:37.411 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:21:37.412 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:21:37.471 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:21:37.472 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 26ms
02-12-2023 10:21:37.476 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:21:37.477 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:21:37.480 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:21:37.481 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 3ms
02-12-2023 10:21:37.483 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:21:37.487 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:21:37.489 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 4ms
02-12-2023 10:21:37.490 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:21:37.494 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:21:37.496 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 4ms
02-12-2023 10:21:37.497 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:21:37.501 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:21:37.502 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 3ms
02-12-2023 10:21:37.503 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:21:37.507 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:21:37.508 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 3ms
02-12-2023 10:21:37.510 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:21:37.513 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 10:21:37.513 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 2ms
02-12-2023 10:21:37.515 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:21:37.516 [main] INFO  liquibase.log - Update command completed successfully.
02-12-2023 10:21:37.518 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 10:21:37.518 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
02-12-2023 10:21:37.592 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
02-12-2023 10:21:37.659 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
02-12-2023 10:21:37.662 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
02-12-2023 10:21:38.006 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
02-12-2023 10:21:38.081 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
02-12-2023 10:21:39.115 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02-12-2023 10:21:39.150 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 10:21:39.721 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02-12-2023 10:21:40.073 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
02-12-2023 10:21:40.084 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 5.672 seconds (process running for 6.593)
02-12-2023 10:21:48.881 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
02-12-2023 10:21:48.881 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
02-12-2023 10:21:48.883 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 1 ms
02-12-2023 10:21:49.150 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:21:49.198 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into accounts (account_type,balance,created,currency_code,interest_compounding_period,interest_rate,last_interest_application,user_id,id) values (?,?,?,?,?,?,?,?,default)
02-12-2023 10:21:49.201 [http-nio-8080-exec-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: 23505, SQLState: 23505
02-12-2023 10:21:49.201 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - Нарушение уникального индекса или первичного ключа: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:1 */ CAST(2 AS BIGINT), 'USDT', 'SAVING')"
Unique index or primary key violation: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:1 */ CAST(2 AS BIGINT), 'USDT', 'SAVING')"; SQL statement:
insert into accounts (account_type,balance,created,currency_code,interest_compounding_period,interest_rate,last_interest_application,user_id,id) values (?,?,?,?,?,?,?,?,default) [23505-214]
02-12-2023 10:21:49.213 [http-nio-8080-exec-1] ERROR c.e.c.e.ExceptionResolver.jdbcSQLIntegrityConstraintViolationException - Нарушение уникального индекса или первичного ключа: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:1 */ CAST(2 AS BIGINT), 'USDT', 'SAVING')"
Unique index or primary key violation: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:1 */ CAST(2 AS BIGINT), 'USDT', 'SAVING')"; SQL statement:
insert into accounts (account_type,balance,created,currency_code,interest_compounding_period,interest_rate,last_interest_application,user_id,id) values (?,?,?,?,?,?,?,?,default) [23505-214]
02-12-2023 10:22:00.128 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:22:00.132 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:22:00.133 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:22:00.140 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:22:00.160 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:22:00.163 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:22:00.165 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:22:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:22:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:22:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:22:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:22:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:22:30.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:22:30.019 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:23:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:23:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:23:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:23:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:23:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:23:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:23:00.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:23:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:23:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:23:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:23:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:23:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:23:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:23:30.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:24:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:24:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:24:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:24:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:24:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:24:00.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:24:00.022 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:24:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:24:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:24:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:24:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:24:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:24:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:24:30.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:25:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:25:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:25:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:25:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:25:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:25:00.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:25:00.019 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:25:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:25:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:25:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:25:30.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:25:30.021 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:25:30.023 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:25:30.025 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:26:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:26:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:26:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:26:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:26:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:26:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:26:00.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:26:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:26:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:26:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:26:30.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:26:30.019 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:26:30.020 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:26:30.021 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:27:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 10:27:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:27:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 10:27:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:27:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:27:00.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.interest_compounding_period,a1_0.interest_rate,a1_0.last_interest_application,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 10:27:00.021 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,interest_compounding_period=?,interest_rate=?,last_interest_application=?,user_id=? where id=?
02-12-2023 10:27:09.809 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 10:27:09.818 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
02-12-2023 10:27:09.821 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
02-12-2023 11:20:06.545 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 2192 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
02-12-2023 11:20:06.549 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
02-12-2023 11:20:08.292 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02-12-2023 11:20:08.418 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 110 ms. Found 5 JPA repository interfaces.
02-12-2023 11:20:09.134 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
02-12-2023 11:20:09.148 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
02-12-2023 11:20:09.149 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
02-12-2023 11:20:09.296 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
02-12-2023 11:20:09.297 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 2640 ms
02-12-2023 11:20:09.338 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
02-12-2023 11:20:09.730 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
02-12-2023 11:20:09.732 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
02-12-2023 11:20:09.747 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
02-12-2023 11:20:10.034 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
02-12-2023 11:20:10.512 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:20:10.516 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:20:10.522 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:20:10.527 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:20:10.537 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:20:10.537 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
02-12-2023 11:20:10.554 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
02-12-2023 11:20:10.558 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:20:10.559 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
02-12-2023 11:20:10.561 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:20:10.562 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:20:10.678 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:20:10.679 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 41ms
02-12-2023 11:20:10.683 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:20:10.684 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:20:10.688 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:20:10.689 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 3ms
02-12-2023 11:20:10.690 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:20:10.694 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:20:10.695 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 4ms
02-12-2023 11:20:10.696 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:20:10.700 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:20:10.701 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 3ms
02-12-2023 11:20:10.703 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:20:10.706 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:20:10.707 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 3ms
02-12-2023 11:20:10.708 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:20:10.711 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:20:10.712 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 3ms
02-12-2023 11:20:10.713 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:20:10.716 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:20:10.718 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 2ms
02-12-2023 11:20:10.719 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:20:10.720 [main] INFO  liquibase.log - Update command completed successfully.
02-12-2023 11:20:10.723 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:20:10.724 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
02-12-2023 11:20:10.861 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
02-12-2023 11:20:10.988 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
02-12-2023 11:20:10.996 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
02-12-2023 11:20:11.462 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
02-12-2023 11:20:11.537 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
02-12-2023 11:20:12.932 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02-12-2023 11:20:12.973 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 11:20:13.707 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02-12-2023 11:20:14.129 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
02-12-2023 11:20:14.140 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 8.328 seconds (process running for 9.846)
02-12-2023 11:20:30.436 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
02-12-2023 11:20:30.438 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
02-12-2023 11:20:30.440 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 2 ms
02-12-2023 11:20:30.483 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 11:20:30.506 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:20:30.518 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 where t1_0.transaction_type=? order by t1_0.amount offset ? rows fetch first ? rows only
02-12-2023 11:20:30.539 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:20:30.592 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:20:30.600 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:20:30.603 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:20:30.618 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:20:30.668 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:20:30.691 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:20:30.695 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:21:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 11:21:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:21:00.022 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:21:00.025 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:21:00.030 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:21:00.035 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:21:00.038 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:21:03.815 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 where t1_0.transaction_type=? order by t1_0.amount offset ? rows fetch first ? rows only
02-12-2023 11:21:03.816 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:21:03.818 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:21:03.820 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:21:13.921 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 where t1_0.transaction_type=? order by t1_0.amount offset ? rows fetch first ? rows only
02-12-2023 11:21:13.922 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:21:13.925 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:21:13.927 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:21:30.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 11:21:30.029 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:21:30.035 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:21:30.041 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:21:30.046 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:21:30.049 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:21:30.051 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:21:59.625 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 where t1_0.transaction_type=? order by t1_0.created offset ? rows fetch first ? rows only
02-12-2023 11:21:59.629 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:21:59.630 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:21:59.633 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:22:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 11:22:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:22:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:22:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:22:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:22:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:22:00.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:22:29.988 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 11:22:29.991 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:22:29.992 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:22:29.994 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:22:29.995 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:22:30.048 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:22:30.052 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:23:00.001 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 11:23:00.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:23:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:23:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:23:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:23:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:23:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:23:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 11:23:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:23:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:23:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:23:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:23:30.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:23:30.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:24:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 11:24:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:24:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:24:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:24:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:24:00.021 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:24:00.022 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:24:26.646 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 11:24:26.673 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
02-12-2023 11:24:26.678 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
02-12-2023 11:24:34.261 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 2263 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
02-12-2023 11:24:34.266 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
02-12-2023 11:24:35.068 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02-12-2023 11:24:35.153 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 74 ms. Found 5 JPA repository interfaces.
02-12-2023 11:24:35.808 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
02-12-2023 11:24:35.822 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
02-12-2023 11:24:35.822 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
02-12-2023 11:24:35.925 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
02-12-2023 11:24:35.926 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1588 ms
02-12-2023 11:24:35.951 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
02-12-2023 11:24:36.254 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
02-12-2023 11:24:36.256 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
02-12-2023 11:24:36.270 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
02-12-2023 11:24:36.556 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
02-12-2023 11:24:36.808 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:24:36.810 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:24:36.815 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:24:36.818 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:24:36.822 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:24:36.822 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
02-12-2023 11:24:36.833 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
02-12-2023 11:24:36.838 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:24:36.840 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
02-12-2023 11:24:36.842 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:24:36.843 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:24:36.943 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:24:36.944 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 63ms
02-12-2023 11:24:36.949 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:24:36.950 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:24:36.955 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:24:36.956 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 5ms
02-12-2023 11:24:36.957 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:24:36.962 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:24:36.964 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 5ms
02-12-2023 11:24:36.965 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:24:36.970 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:24:36.971 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 4ms
02-12-2023 11:24:36.973 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:24:36.980 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:24:36.982 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 6ms
02-12-2023 11:24:36.983 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:24:36.990 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:24:36.990 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 4ms
02-12-2023 11:24:36.992 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:24:36.995 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:24:36.995 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 2ms
02-12-2023 11:24:36.997 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:24:36.998 [main] INFO  liquibase.log - Update command completed successfully.
02-12-2023 11:24:37.000 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:24:37.000 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
02-12-2023 11:24:37.100 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
02-12-2023 11:24:37.207 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
02-12-2023 11:24:37.211 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
02-12-2023 11:24:37.591 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
02-12-2023 11:24:37.644 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
02-12-2023 11:24:38.822 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02-12-2023 11:24:38.860 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 11:24:39.574 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02-12-2023 11:24:40.322 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
02-12-2023 11:24:40.336 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 6.865 seconds (process running for 8.015)
02-12-2023 11:24:52.557 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
02-12-2023 11:24:52.558 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
02-12-2023 11:24:52.560 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 2 ms
02-12-2023 11:24:52.933 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 where t1_0.transaction_type=? order by t1_0.amount offset ? rows fetch first ? rows only
02-12-2023 11:24:52.959 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:24:52.987 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:24:52.991 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:25:00.045 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 11:25:00.046 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:25:00.049 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:25:00.079 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:25:00.118 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:25:00.129 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:25:00.131 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:25:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 11:25:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:25:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:25:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:25:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:25:30.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:25:30.020 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:25:50.639 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 11:25:50.644 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
02-12-2023 11:25:50.646 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
02-12-2023 11:55:58.873 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 2623 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
02-12-2023 11:55:58.880 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
02-12-2023 11:55:59.687 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02-12-2023 11:55:59.758 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 62 ms. Found 5 JPA repository interfaces.
02-12-2023 11:56:00.365 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
02-12-2023 11:56:00.384 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
02-12-2023 11:56:00.385 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
02-12-2023 11:56:00.475 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
02-12-2023 11:56:00.476 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1514 ms
02-12-2023 11:56:00.506 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
02-12-2023 11:56:00.816 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
02-12-2023 11:56:00.817 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
02-12-2023 11:56:00.829 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
02-12-2023 11:56:01.009 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
02-12-2023 11:56:01.244 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:56:01.247 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:56:01.251 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:56:01.253 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:56:01.258 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:56:01.258 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
02-12-2023 11:56:01.268 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
02-12-2023 11:56:01.272 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:56:01.273 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
02-12-2023 11:56:01.275 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:56:01.276 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:56:01.339 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:56:01.340 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 28ms
02-12-2023 11:56:01.344 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:56:01.345 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:56:01.349 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:56:01.350 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 4ms
02-12-2023 11:56:01.352 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:56:01.358 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:56:01.360 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 6ms
02-12-2023 11:56:01.362 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:56:01.365 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:56:01.366 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 4ms
02-12-2023 11:56:01.367 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:56:01.371 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:56:01.372 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 3ms
02-12-2023 11:56:01.373 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:56:01.377 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:56:01.378 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 3ms
02-12-2023 11:56:01.379 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:56:01.382 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 11:56:01.383 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 2ms
02-12-2023 11:56:01.384 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:56:01.385 [main] INFO  liquibase.log - Update command completed successfully.
02-12-2023 11:56:01.387 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 11:56:01.388 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
02-12-2023 11:56:01.474 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
02-12-2023 11:56:01.562 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
02-12-2023 11:56:01.566 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
02-12-2023 11:56:02.010 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
02-12-2023 11:56:02.076 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
02-12-2023 11:56:03.288 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02-12-2023 11:56:03.331 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 11:56:03.901 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02-12-2023 11:56:04.281 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
02-12-2023 11:56:04.291 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 6.113 seconds (process running for 6.855)
02-12-2023 11:56:30.264 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 11:56:30.287 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:56:30.300 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:56:30.341 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:56:30.456 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:56:30.463 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:56:30.465 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:57:00.004 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 11:57:00.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:57:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:57:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:57:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:57:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:57:00.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:57:27.745 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
02-12-2023 11:57:27.746 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
02-12-2023 11:57:27.749 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 2 ms
02-12-2023 11:57:27.869 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 where t1_0.transaction_type=? order by t1_0.amount offset ? rows fetch first ? rows only
02-12-2023 11:57:27.871 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:57:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 11:57:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:57:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:57:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:57:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:57:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:57:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:57:54.345 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 where t1_0.transaction_type=? order by t1_0.amount offset ? rows fetch first ? rows only
02-12-2023 11:57:54.347 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:57:54.349 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:57:54.352 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:58:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 11:58:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:58:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:58:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:58:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:58:00.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:58:00.021 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:58:30.004 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 11:58:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:58:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:58:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:58:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:58:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:58:30.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:58:30.889 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 where t1_0.transaction_type=? order by t1_0.amount offset ? rows fetch first ? rows only
02-12-2023 11:58:30.891 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:59:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 11:59:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:59:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:59:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:59:00.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:59:00.019 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:59:00.022 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:59:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 11:59:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:59:30.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 11:59:30.020 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:59:30.022 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 11:59:30.024 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 11:59:30.026 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:00:00.002 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:00:00.004 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:00:00.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:00:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:00:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:00:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:00:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:00:30.004 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:00:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:00:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:00:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:00:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:00:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:00:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:00:34.325 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 12:00:34.340 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
02-12-2023 12:00:34.344 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
02-12-2023 12:00:39.367 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 2657 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
02-12-2023 12:00:39.369 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
02-12-2023 12:00:40.074 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02-12-2023 12:00:40.147 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 61 ms. Found 5 JPA repository interfaces.
02-12-2023 12:00:40.696 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
02-12-2023 12:00:40.708 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
02-12-2023 12:00:40.709 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
02-12-2023 12:00:40.794 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
02-12-2023 12:00:40.794 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1376 ms
02-12-2023 12:00:40.818 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
02-12-2023 12:00:41.068 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
02-12-2023 12:00:41.071 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
02-12-2023 12:00:41.086 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
02-12-2023 12:00:41.293 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
02-12-2023 12:00:41.514 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:00:41.517 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:00:41.521 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:00:41.526 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:00:41.530 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:00:41.530 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
02-12-2023 12:00:41.542 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
02-12-2023 12:00:41.547 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:00:41.549 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
02-12-2023 12:00:41.551 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:00:41.552 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:00:41.611 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:00:41.612 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 26ms
02-12-2023 12:00:41.616 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:00:41.618 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:00:41.621 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:00:41.622 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 4ms
02-12-2023 12:00:41.623 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:00:41.627 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:00:41.628 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 4ms
02-12-2023 12:00:41.629 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:00:41.633 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:00:41.633 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 3ms
02-12-2023 12:00:41.634 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:00:41.638 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:00:41.638 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 3ms
02-12-2023 12:00:41.639 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:00:41.643 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:00:41.644 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 3ms
02-12-2023 12:00:41.645 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:00:41.648 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:00:41.649 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 3ms
02-12-2023 12:00:41.651 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:00:41.652 [main] INFO  liquibase.log - Update command completed successfully.
02-12-2023 12:00:41.655 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:00:41.655 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
02-12-2023 12:00:41.733 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
02-12-2023 12:00:41.813 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
02-12-2023 12:00:41.816 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
02-12-2023 12:00:42.153 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
02-12-2023 12:00:42.207 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
02-12-2023 12:00:43.271 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02-12-2023 12:00:43.305 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 12:00:43.866 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02-12-2023 12:00:44.239 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
02-12-2023 12:00:44.255 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 5.434 seconds (process running for 6.29)
02-12-2023 12:00:51.155 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
02-12-2023 12:00:51.158 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
02-12-2023 12:00:51.167 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 8 ms
02-12-2023 12:00:51.244 [http-nio-8080-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver.logException - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'transactionType' for method parameter type String is not present]
02-12-2023 12:01:00.217 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:01:00.242 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:01:00.255 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:01:00.283 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:01:00.323 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:01:00.332 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:01:00.336 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:01:14.901 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 12:01:15.055 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
02-12-2023 12:01:15.057 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
02-12-2023 12:01:20.132 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 2670 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
02-12-2023 12:01:20.136 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
02-12-2023 12:01:20.870 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02-12-2023 12:01:20.949 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 66 ms. Found 5 JPA repository interfaces.
02-12-2023 12:01:21.518 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
02-12-2023 12:01:21.530 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
02-12-2023 12:01:21.531 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
02-12-2023 12:01:21.608 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
02-12-2023 12:01:21.609 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1406 ms
02-12-2023 12:01:21.650 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
02-12-2023 12:01:21.896 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
02-12-2023 12:01:21.898 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
02-12-2023 12:01:21.908 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
02-12-2023 12:01:22.098 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
02-12-2023 12:01:22.316 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:01:22.319 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:01:22.323 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:01:22.327 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:01:22.331 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:01:22.331 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
02-12-2023 12:01:22.341 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
02-12-2023 12:01:22.346 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:01:22.347 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
02-12-2023 12:01:22.348 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:01:22.349 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:01:22.416 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:01:22.417 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 26ms
02-12-2023 12:01:22.421 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:01:22.422 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:01:22.426 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:01:22.427 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 3ms
02-12-2023 12:01:22.428 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:01:22.433 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:01:22.434 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 4ms
02-12-2023 12:01:22.435 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:01:22.438 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:01:22.439 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 3ms
02-12-2023 12:01:22.440 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:01:22.444 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:01:22.445 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 4ms
02-12-2023 12:01:22.446 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:01:22.449 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:01:22.450 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 2ms
02-12-2023 12:01:22.451 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:01:22.453 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:01:22.454 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 2ms
02-12-2023 12:01:22.455 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:01:22.456 [main] INFO  liquibase.log - Update command completed successfully.
02-12-2023 12:01:22.457 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:01:22.458 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
02-12-2023 12:01:22.527 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
02-12-2023 12:01:22.602 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
02-12-2023 12:01:22.605 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
02-12-2023 12:01:22.973 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
02-12-2023 12:01:23.022 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
02-12-2023 12:01:24.021 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02-12-2023 12:01:24.053 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 12:01:24.638 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02-12-2023 12:01:24.996 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
02-12-2023 12:01:25.006 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 5.506 seconds (process running for 6.234)
02-12-2023 12:01:30.176 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:01:30.205 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:01:30.216 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:01:30.242 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:01:30.607 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:01:30.631 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:01:30.633 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:01:32.832 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
02-12-2023 12:01:32.833 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
02-12-2023 12:01:32.834 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 1 ms
02-12-2023 12:01:32.911 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Name is null] with root cause
java.lang.NullPointerException: Name is null
	at java.base/java.lang.Enum.valueOf(Enum.java:271)
	at com.example.cryptoservice.domain.TransactionType.valueOf(TransactionType.java:3)
	at com.example.cryptoservice.service.TransactionServiceImpl.getAllTransactions(TransactionServiceImpl.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:699)
	at com.example.cryptoservice.service.TransactionServiceImpl$$SpringCGLIB$$0.getAllTransactions(<generated>)
	at com.example.cryptoservice.controller.TransactionController.getAllTransferTransactions(TransactionController.java:40)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
02-12-2023 12:02:00.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:02:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:02:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:02:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:02:00.020 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:02:00.024 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:02:00.026 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:02:30.001 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:02:30.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:02:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:02:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:02:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:02:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:02:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:03:00.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:03:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:03:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:03:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:03:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:03:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:03:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:03:30.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:03:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:03:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:03:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:03:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:03:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:03:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:04:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:04:00.021 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:04:00.023 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:04:00.026 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:04:00.028 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:04:00.031 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:04:00.032 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:04:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:04:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:04:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:04:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:04:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:04:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:04:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:05:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:05:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:05:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:05:00.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:05:00.021 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:05:00.029 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:05:00.032 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:05:30.003 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:05:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:05:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:05:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:05:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:05:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:05:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:06:00.004 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:06:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:06:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:06:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:06:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:06:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:06:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:06:30.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:06:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:06:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:06:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:06:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:06:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:06:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:07:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:07:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:07:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:07:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:07:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:07:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:07:00.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:07:30.002 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:07:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:07:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:07:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:07:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:07:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:07:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:08:00.004 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:08:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:08:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:08:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:08:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:08:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:08:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:08:30.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:08:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:08:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:08:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:08:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:08:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:08:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:09:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:09:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:09:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:09:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:09:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:09:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:09:00.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:09:30.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:09:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:09:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:09:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:09:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:09:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:09:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:10:00.004 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:10:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:10:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:10:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:10:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:10:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:10:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:10:30.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:10:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:10:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:10:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:10:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:10:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:10:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:11:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:11:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:11:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:11:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:11:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:11:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:11:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:11:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:11:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:11:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:11:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:11:30.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:11:30.019 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:11:30.020 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:12:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:12:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:12:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:12:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:12:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:12:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:12:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:12:30.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:12:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:12:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:12:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:12:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:12:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:12:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:13:00.004 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:13:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:13:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:13:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:13:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:13:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:13:00.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:13:30.004 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:13:30.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:13:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:13:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:13:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:13:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:13:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:13:39.476 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 12:58:41.689 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 3463 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
02-12-2023 12:58:41.698 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
02-12-2023 12:58:43.065 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02-12-2023 12:58:43.165 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 86 ms. Found 5 JPA repository interfaces.
02-12-2023 12:58:43.847 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
02-12-2023 12:58:43.857 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
02-12-2023 12:58:43.857 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
02-12-2023 12:58:43.957 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
02-12-2023 12:58:43.959 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 2180 ms
02-12-2023 12:58:44.006 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
02-12-2023 12:58:44.319 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
02-12-2023 12:58:44.321 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
02-12-2023 12:58:44.334 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
02-12-2023 12:58:44.536 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
02-12-2023 12:58:44.840 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:58:44.843 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:58:44.848 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:58:44.852 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:58:44.857 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:58:44.857 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
02-12-2023 12:58:44.872 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
02-12-2023 12:58:44.877 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:58:44.878 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
02-12-2023 12:58:44.880 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:58:44.881 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:58:45.044 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:58:45.045 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 81ms
02-12-2023 12:58:45.064 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:58:45.067 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:58:45.075 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:58:45.077 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 7ms
02-12-2023 12:58:45.081 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:58:45.088 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:58:45.090 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 6ms
02-12-2023 12:58:45.093 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:58:45.098 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:58:45.100 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 5ms
02-12-2023 12:58:45.102 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:58:45.109 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:58:45.111 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 6ms
02-12-2023 12:58:45.114 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:58:45.118 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:58:45.119 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 4ms
02-12-2023 12:58:45.121 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:58:45.124 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:58:45.125 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 3ms
02-12-2023 12:58:45.127 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:58:45.129 [main] INFO  liquibase.log - Update command completed successfully.
02-12-2023 12:58:45.132 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:58:45.132 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
02-12-2023 12:58:45.477 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
02-12-2023 12:58:45.590 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
02-12-2023 12:58:45.594 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
02-12-2023 12:58:46.214 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
02-12-2023 12:58:46.287 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
02-12-2023 12:58:47.556 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02-12-2023 12:58:47.605 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 12:58:48.260 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02-12-2023 12:58:48.694 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
02-12-2023 12:58:48.708 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 8.196 seconds (process running for 9.925)
02-12-2023 12:58:57.249 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
02-12-2023 12:58:57.251 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
02-12-2023 12:58:57.261 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 10 ms
02-12-2023 12:58:57.353 [http-nio-8080-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver.logException - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'transactionType' for method parameter type TransactionType is not present]
02-12-2023 12:59:00.251 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 12:59:00.269 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:59:00.281 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 12:59:00.306 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:59:00.363 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:59:00.371 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:59:00.373 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 12:59:31.681 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 3481 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
02-12-2023 12:59:31.685 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
02-12-2023 12:59:32.664 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02-12-2023 12:59:32.760 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 80 ms. Found 5 JPA repository interfaces.
02-12-2023 12:59:33.413 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
02-12-2023 12:59:33.422 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
02-12-2023 12:59:33.427 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
02-12-2023 12:59:33.512 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
02-12-2023 12:59:33.513 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1762 ms
02-12-2023 12:59:33.536 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
02-12-2023 12:59:33.817 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
02-12-2023 12:59:33.819 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
02-12-2023 12:59:33.830 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
02-12-2023 12:59:34.019 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
02-12-2023 12:59:34.257 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:59:34.260 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:59:34.264 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:59:34.268 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:59:34.273 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:59:34.273 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
02-12-2023 12:59:34.284 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
02-12-2023 12:59:34.290 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:59:34.292 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
02-12-2023 12:59:34.294 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:59:34.296 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:59:34.370 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:59:34.372 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 38ms
02-12-2023 12:59:34.381 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:59:34.383 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:59:34.389 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:59:34.390 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 5ms
02-12-2023 12:59:34.391 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:59:34.397 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:59:34.398 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 5ms
02-12-2023 12:59:34.399 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:59:34.403 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:59:34.404 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 4ms
02-12-2023 12:59:34.406 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:59:34.411 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:59:34.412 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 4ms
02-12-2023 12:59:34.413 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:59:34.416 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:59:34.417 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 2ms
02-12-2023 12:59:34.418 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:59:34.420 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 12:59:34.421 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 3ms
02-12-2023 12:59:34.423 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:59:34.423 [main] INFO  liquibase.log - Update command completed successfully.
02-12-2023 12:59:34.426 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 12:59:34.426 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
02-12-2023 12:59:34.519 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
02-12-2023 12:59:34.605 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
02-12-2023 12:59:34.623 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
02-12-2023 12:59:34.984 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
02-12-2023 12:59:35.043 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
02-12-2023 12:59:36.145 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02-12-2023 12:59:36.182 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 12:59:36.762 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02-12-2023 12:59:37.186 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
02-12-2023 12:59:37.198 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 6.27 seconds (process running for 7.181)
02-12-2023 12:59:42.893 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
02-12-2023 12:59:42.894 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
02-12-2023 12:59:42.896 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 2 ms
02-12-2023 12:59:43.410 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 order by t1_0.amount offset ? rows fetch first ? rows only
02-12-2023 12:59:43.444 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:59:43.465 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:59:43.473 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 12:59:43.729 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select count(t1_0.id) from transactions t1_0
02-12-2023 13:00:00.060 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 13:00:00.062 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 13:00:00.065 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 13:00:00.076 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 13:00:00.118 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 13:00:00.123 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 13:00:00.125 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 13:00:13.731 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 13:00:13.762 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
02-12-2023 13:00:13.766 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
02-12-2023 13:00:22.029 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 3499 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
02-12-2023 13:00:22.034 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
02-12-2023 13:00:23.110 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02-12-2023 13:00:23.277 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 147 ms. Found 5 JPA repository interfaces.
02-12-2023 13:00:23.980 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
02-12-2023 13:00:23.993 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
02-12-2023 13:00:23.994 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
02-12-2023 13:00:24.110 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
02-12-2023 13:00:24.111 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1982 ms
02-12-2023 13:00:24.183 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
02-12-2023 13:00:24.479 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
02-12-2023 13:00:24.482 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
02-12-2023 13:00:24.496 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
02-12-2023 13:00:24.740 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
02-12-2023 13:00:25.071 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 13:00:25.083 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 13:00:25.098 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 13:00:25.105 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 13:00:25.116 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 13:00:25.118 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
02-12-2023 13:00:25.152 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
02-12-2023 13:00:25.175 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 13:00:25.177 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
02-12-2023 13:00:25.180 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 13:00:25.182 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 13:00:25.273 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 13:00:25.274 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 44ms
02-12-2023 13:00:25.280 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 13:00:25.284 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 13:00:25.293 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 13:00:25.295 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 8ms
02-12-2023 13:00:25.302 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 13:00:25.313 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 13:00:25.322 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 10ms
02-12-2023 13:00:25.325 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 13:00:25.332 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 13:00:25.338 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 9ms
02-12-2023 13:00:25.343 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 13:00:25.361 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 13:00:25.363 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 17ms
02-12-2023 13:00:25.366 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 13:00:25.374 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 13:00:25.375 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 5ms
02-12-2023 13:00:25.377 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 13:00:25.383 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 13:00:25.385 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 6ms
02-12-2023 13:00:25.389 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 13:00:25.391 [main] INFO  liquibase.log - Update command completed successfully.
02-12-2023 13:00:25.394 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 13:00:25.394 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
02-12-2023 13:00:25.538 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
02-12-2023 13:00:25.638 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
02-12-2023 13:00:25.642 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
02-12-2023 13:00:26.061 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
02-12-2023 13:00:26.118 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
02-12-2023 13:00:27.350 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02-12-2023 13:00:27.386 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 13:00:27.983 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02-12-2023 13:00:28.417 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
02-12-2023 13:00:28.429 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 7.485 seconds (process running for 9.016)
02-12-2023 13:00:30.154 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 13:00:30.166 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 13:00:30.174 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 13:00:30.192 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 13:00:30.216 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 13:00:30.221 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 13:00:30.222 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 13:00:37.570 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
02-12-2023 13:00:37.572 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
02-12-2023 13:00:37.577 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 4 ms
02-12-2023 13:00:37.689 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 order by t1_0.amount offset ? rows fetch first ? rows only
02-12-2023 13:00:37.692 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 13:00:37.694 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 13:00:37.697 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 13:01:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 13:01:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 13:01:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 13:01:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 13:01:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 13:01:00.032 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 13:01:00.041 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 13:01:07.277 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 order by t1_0.amount offset ? rows fetch first ? rows only
02-12-2023 13:01:07.281 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 13:01:07.283 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 13:01:07.285 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 13:01:30.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 13:01:30.069 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 13:01:30.071 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 13:01:30.075 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 13:01:30.079 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 13:01:30.082 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 13:01:30.083 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 13:02:00.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 13:02:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 13:02:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 13:02:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 13:02:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 13:02:00.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 13:02:00.019 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 13:02:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 13:02:30.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 13:02:30.020 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 13:02:30.023 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 13:02:30.026 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 13:02:30.028 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 13:02:30.033 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 13:02:32.642 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 14:27:28.487 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 4517 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
02-12-2023 14:27:28.491 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
02-12-2023 14:27:31.349 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
02-12-2023 14:27:31.457 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 91 ms. Found 5 JPA repository interfaces.
02-12-2023 14:27:32.917 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
02-12-2023 14:27:32.937 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
02-12-2023 14:27:32.937 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
02-12-2023 14:27:33.135 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
02-12-2023 14:27:33.136 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 4582 ms
02-12-2023 14:27:33.174 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
02-12-2023 14:27:33.714 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
02-12-2023 14:27:33.716 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
02-12-2023 14:27:33.727 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
02-12-2023 14:27:33.944 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
02-12-2023 14:27:34.307 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 14:27:34.310 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 14:27:34.316 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 14:27:34.322 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 14:27:34.328 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 14:27:34.329 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
02-12-2023 14:27:34.347 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
02-12-2023 14:27:34.353 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 14:27:34.354 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
02-12-2023 14:27:34.356 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 14:27:34.357 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 14:27:34.502 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 14:27:34.504 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 32ms
02-12-2023 14:27:34.509 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 14:27:34.511 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 14:27:34.518 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 14:27:34.519 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 6ms
02-12-2023 14:27:34.521 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 14:27:34.530 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 14:27:34.532 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 8ms
02-12-2023 14:27:34.534 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 14:27:34.541 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 14:27:34.542 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 5ms
02-12-2023 14:27:34.545 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 14:27:34.550 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 14:27:34.551 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 4ms
02-12-2023 14:27:34.553 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 14:27:34.556 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 14:27:34.557 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 4ms
02-12-2023 14:27:34.559 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 14:27:34.563 [main] INFO  liquibase.changelog.log - Custom SQL executed
02-12-2023 14:27:34.564 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 3ms
02-12-2023 14:27:34.566 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 14:27:34.567 [main] INFO  liquibase.log - Update command completed successfully.
02-12-2023 14:27:34.570 [main] INFO  liquibase.executor.log - Changelog query completed.
02-12-2023 14:27:34.570 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
02-12-2023 14:27:34.673 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
02-12-2023 14:27:34.773 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
02-12-2023 14:27:34.776 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
02-12-2023 14:27:35.292 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
02-12-2023 14:27:35.375 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
02-12-2023 14:27:36.791 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
02-12-2023 14:27:36.834 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 14:27:37.534 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
02-12-2023 14:27:38.017 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
02-12-2023 14:27:38.030 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 10.213 seconds (process running for 11.245)
02-12-2023 14:28:00.202 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 14:28:00.221 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 14:28:00.230 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 14:28:00.255 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 14:28:00.295 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 14:28:00.301 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 14:28:00.302 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 14:28:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 14:28:30.022 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 14:28:30.023 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 14:28:30.027 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 14:28:30.030 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 14:28:30.032 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 14:28:30.034 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 14:28:35.272 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
02-12-2023 14:28:35.273 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
02-12-2023 14:28:35.275 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 2 ms
02-12-2023 14:28:35.538 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 14:28:35.543 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
02-12-2023 14:28:35.548 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
02-12-2023 14:28:35.554 [http-nio-8080-exec-1] ERROR c.e.c.e.ExceptionResolver.accountNotFoundException - Account with id 4 not found
02-12-2023 14:29:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 14:29:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 14:29:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 14:29:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 14:29:00.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 14:29:00.019 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 14:29:00.021 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 14:29:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
02-12-2023 14:29:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 14:29:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.login,c1_0.password,c1_0.user_role from crypto_users c1_0 where c1_0.id=?
02-12-2023 14:29:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 14:29:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 14:29:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.login,u1_0.password,u1_0.user_role from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
02-12-2023 14:29:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
02-12-2023 14:29:54.947 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
02-12-2023 14:29:54.951 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
02-12-2023 14:29:54.956 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.

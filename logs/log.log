03-12-2023 12:50:37.626 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 11935 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
03-12-2023 12:50:37.631 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
03-12-2023 12:50:38.537 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-12-2023 12:50:38.620 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 72 ms. Found 6 JPA repository interfaces.
03-12-2023 12:50:39.278 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-12-2023 12:50:39.290 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-12-2023 12:50:39.291 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
03-12-2023 12:50:39.610 [main] INFO  o.apache.jasper.servlet.TldScanner.log - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
03-12-2023 12:50:39.617 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-12-2023 12:50:39.617 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1939 ms
03-12-2023 12:50:39.648 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-12-2023 12:50:39.993 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
03-12-2023 12:50:39.995 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-12-2023 12:50:40.008 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
03-12-2023 12:50:40.208 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
03-12-2023 12:50:40.515 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:50:40.518 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:50:40.522 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:50:40.525 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:50:40.529 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:50:40.530 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-12-2023 12:50:40.542 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
03-12-2023 12:50:40.546 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:50:40.547 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
03-12-2023 12:50:40.549 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:50:40.550 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:50:40.668 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:50:40.669 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 33ms
03-12-2023 12:50:40.674 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:50:40.675 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:50:40.678 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:50:40.679 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 2ms
03-12-2023 12:50:40.680 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:50:40.685 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:50:40.686 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 5ms
03-12-2023 12:50:40.688 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:50:40.691 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:50:40.692 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 4ms
03-12-2023 12:50:40.693 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:50:40.697 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:50:40.698 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 3ms
03-12-2023 12:50:40.699 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:50:40.702 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:50:40.703 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 2ms
03-12-2023 12:50:40.704 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:50:40.707 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:50:40.708 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 2ms
03-12-2023 12:50:40.709 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:50:40.712 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:50:40.713 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-security-credentials.sql::raw::includeAll ran successfully in 2ms
03-12-2023 12:50:40.717 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:50:40.720 [main] INFO  liquibase.log - Update command completed successfully.
03-12-2023 12:50:40.726 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:50:40.727 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-12-2023 12:50:40.869 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-12-2023 12:50:40.969 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
03-12-2023 12:50:40.974 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
03-12-2023 12:50:41.558 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
03-12-2023 12:50:41.646 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
03-12-2023 12:50:41.931 [main] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Failed to initialize JPA EntityManagerFactory: Unable to create unique key constraint (currency) on table 'transaction_fees' since the column 'currency' was not found (specify the correct column name, which depends on the naming strategy, and may not be the same as the entity property name)
03-12-2023 12:50:41.933 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter.onStartup - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthenticationFilter' defined in file [/Users/allencooper/IdeaProjects/CryptoService/target/classes/com/example/cryptoservice/security/filter/JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'customUserDetailService' defined in file [/Users/allencooper/IdeaProjects/CryptoService/target/classes/com/example/cryptoservice/security/service/CustomUserDetailService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'securityCredentialsRepository' defined in com.example.cryptoservice.security.repository.SecurityCredentialsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
03-12-2023 12:50:41.971 [main] INFO  o.a.catalina.core.StandardService.log - Stopping service [Tomcat]
03-12-2023 12:50:41.974 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
03-12-2023 12:50:41.974 [main] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
03-12-2023 12:50:41.976 [main] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
03-12-2023 12:50:41.988 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger.logMessage - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
03-12-2023 12:50:42.010 [main] ERROR o.s.boot.SpringApplication.reportFailure - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:164)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:738)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:440)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.cryptoservice.CryptoServiceApplication.main(CryptoServiceApplication.java:12)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter' defined in file [/Users/allencooper/IdeaProjects/CryptoService/target/classes/com/example/cryptoservice/security/filter/JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'customUserDetailService' defined in file [/Users/allencooper/IdeaProjects/CryptoService/target/classes/com/example/cryptoservice/security/service/CustomUserDetailService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'securityCredentialsRepository' defined in com.example.cryptoservice.security.repository.SecurityCredentialsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailService' defined in file [/Users/allencooper/IdeaProjects/CryptoService/target/classes/com/example/cryptoservice/security/service/CustomUserDetailService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'securityCredentialsRepository' defined in com.example.cryptoservice.security.repository.SecurityCredentialsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'securityCredentialsRepository' defined in com.example.cryptoservice.security.repository.SecurityCredentialsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 68 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaSharedEM_entityManagerFactory': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:688)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 82 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create unique key constraint (currency) on table 'transaction_fees' since the column 'currency' was not found (specify the correct column name, which depends on the naming strategy, and may not be the same as the entity property name)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 94 common frames omitted
Caused by: org.hibernate.AnnotationException: Unable to create unique key constraint (currency) on table 'transaction_fees' since the column 'currency' was not found (specify the correct column name, which depends on the naming strategy, and may not be the same as the entity property name)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.throwUnableToCreateConstraint(InFlightMetadataCollectorImpl.java:2226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.buildUniqueKeyFromColumnNames(InFlightMetadataCollectorImpl.java:2130)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processJPAIndexHolders(InFlightMetadataCollectorImpl.java:2238)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1834)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:331)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1383)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1454)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 101 common frames omitted
03-12-2023 12:54:40.310 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 12002 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
03-12-2023 12:54:40.313 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
03-12-2023 12:54:41.273 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-12-2023 12:54:41.389 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 90 ms. Found 6 JPA repository interfaces.
03-12-2023 12:54:42.058 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-12-2023 12:54:42.072 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-12-2023 12:54:42.073 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
03-12-2023 12:54:42.280 [main] INFO  o.apache.jasper.servlet.TldScanner.log - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
03-12-2023 12:54:42.286 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-12-2023 12:54:42.287 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1928 ms
03-12-2023 12:54:42.313 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-12-2023 12:54:42.661 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
03-12-2023 12:54:42.663 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-12-2023 12:54:42.679 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
03-12-2023 12:54:42.854 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
03-12-2023 12:54:43.096 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:54:43.098 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:54:43.102 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:54:43.105 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:54:43.110 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:54:43.110 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-12-2023 12:54:43.119 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
03-12-2023 12:54:43.127 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:54:43.128 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
03-12-2023 12:54:43.130 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:54:43.131 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:54:43.202 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:54:43.203 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 31ms
03-12-2023 12:54:43.208 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:54:43.209 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:54:43.211 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:54:43.212 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 3ms
03-12-2023 12:54:43.213 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:54:43.217 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:54:43.218 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 4ms
03-12-2023 12:54:43.219 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:54:43.222 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:54:43.223 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 2ms
03-12-2023 12:54:43.224 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:54:43.227 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:54:43.228 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 3ms
03-12-2023 12:54:43.229 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:54:43.232 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:54:43.233 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 3ms
03-12-2023 12:54:43.234 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:54:43.236 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:54:43.237 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 1ms
03-12-2023 12:54:43.238 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:54:43.240 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:54:43.241 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-security-credentials.sql::raw::includeAll ran successfully in 3ms
03-12-2023 12:54:43.242 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:54:43.243 [main] INFO  liquibase.log - Update command completed successfully.
03-12-2023 12:54:43.244 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:54:43.245 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-12-2023 12:54:43.330 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-12-2023 12:54:43.408 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
03-12-2023 12:54:43.412 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
03-12-2023 12:54:43.808 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
03-12-2023 12:54:43.867 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
03-12-2023 12:54:45.190 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
03-12-2023 12:54:45.235 [main] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: wrong column type encountered in column [currency_code] in table [transaction_fees]; found [character (Types#VARCHAR)], but expecting [tinyint (Types#TINYINT)]
03-12-2023 12:54:45.236 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter.onStartup - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthenticationFilter' defined in file [/Users/allencooper/IdeaProjects/CryptoService/target/classes/com/example/cryptoservice/security/filter/JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'customUserDetailService' defined in file [/Users/allencooper/IdeaProjects/CryptoService/target/classes/com/example/cryptoservice/security/service/CustomUserDetailService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'securityCredentialsRepository' defined in com.example.cryptoservice.security.repository.SecurityCredentialsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
03-12-2023 12:54:45.271 [main] INFO  o.a.catalina.core.StandardService.log - Stopping service [Tomcat]
03-12-2023 12:54:45.274 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
03-12-2023 12:54:45.274 [main] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
03-12-2023 12:54:45.275 [main] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
03-12-2023 12:54:45.284 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger.logMessage - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
03-12-2023 12:54:45.303 [main] ERROR o.s.boot.SpringApplication.reportFailure - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:164)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:738)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:440)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.cryptoservice.CryptoServiceApplication.main(CryptoServiceApplication.java:12)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter' defined in file [/Users/allencooper/IdeaProjects/CryptoService/target/classes/com/example/cryptoservice/security/filter/JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'customUserDetailService' defined in file [/Users/allencooper/IdeaProjects/CryptoService/target/classes/com/example/cryptoservice/security/service/CustomUserDetailService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'securityCredentialsRepository' defined in com.example.cryptoservice.security.repository.SecurityCredentialsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailService' defined in file [/Users/allencooper/IdeaProjects/CryptoService/target/classes/com/example/cryptoservice/security/service/CustomUserDetailService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'securityCredentialsRepository' defined in com.example.cryptoservice.security.repository.SecurityCredentialsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'securityCredentialsRepository' defined in com.example.cryptoservice.security.repository.SecurityCredentialsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 68 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaSharedEM_entityManagerFactory': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:688)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 82 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: wrong column type encountered in column [currency_code] in table [transaction_fees]; found [character (Types#VARCHAR)], but expecting [tinyint (Types#TINYINT)]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 94 common frames omitted
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: wrong column type encountered in column [currency_code] in table [transaction_fees]; found [character (Types#VARCHAR)], but expecting [tinyint (Types#TINYINT)]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 101 common frames omitted
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: wrong column type encountered in column [currency_code] in table [transaction_fees]; found [character (Types#VARCHAR)], but expecting [tinyint (Types#TINYINT)]
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.validateColumnType(AbstractSchemaValidator.java:165)
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.validateTable(AbstractSchemaValidator.java:152)
	at org.hibernate.tool.schema.internal.GroupedSchemaValidatorImpl.validateTables(GroupedSchemaValidatorImpl.java:46)
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.performValidation(AbstractSchemaValidator.java:97)
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.doValidation(AbstractSchemaValidator.java:75)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:293)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:293)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1458)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 105 common frames omitted
03-12-2023 12:58:26.370 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 12046 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
03-12-2023 12:58:26.374 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
03-12-2023 12:58:27.263 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-12-2023 12:58:27.365 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 88 ms. Found 6 JPA repository interfaces.
03-12-2023 12:58:28.023 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-12-2023 12:58:28.036 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-12-2023 12:58:28.037 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
03-12-2023 12:58:28.223 [main] INFO  o.apache.jasper.servlet.TldScanner.log - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
03-12-2023 12:58:28.228 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-12-2023 12:58:28.229 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1808 ms
03-12-2023 12:58:28.253 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-12-2023 12:58:28.565 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
03-12-2023 12:58:28.567 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-12-2023 12:58:28.579 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
03-12-2023 12:58:28.747 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
03-12-2023 12:58:29.000 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:58:29.003 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:58:29.007 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:58:29.010 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:58:29.016 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:58:29.017 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-12-2023 12:58:29.029 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
03-12-2023 12:58:29.033 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:58:29.034 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
03-12-2023 12:58:29.036 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:58:29.037 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:58:29.113 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:58:29.114 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 33ms
03-12-2023 12:58:29.118 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:58:29.120 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:58:29.122 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:58:29.123 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 3ms
03-12-2023 12:58:29.125 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:58:29.129 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:58:29.130 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 4ms
03-12-2023 12:58:29.131 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:58:29.135 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:58:29.136 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 3ms
03-12-2023 12:58:29.137 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:58:29.140 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:58:29.141 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 3ms
03-12-2023 12:58:29.142 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:58:29.146 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:58:29.147 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 3ms
03-12-2023 12:58:29.149 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:58:29.151 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:58:29.152 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 2ms
03-12-2023 12:58:29.153 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:58:29.156 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 12:58:29.157 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-security-credentials.sql::raw::includeAll ran successfully in 3ms
03-12-2023 12:58:29.159 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:58:29.160 [main] INFO  liquibase.log - Update command completed successfully.
03-12-2023 12:58:29.162 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 12:58:29.163 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-12-2023 12:58:29.264 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-12-2023 12:58:29.338 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
03-12-2023 12:58:29.343 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
03-12-2023 12:58:29.744 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
03-12-2023 12:58:29.807 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
03-12-2023 12:58:30.934 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
03-12-2023 12:58:30.977 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 12:58:31.291 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory.<clinit> - Hibernate is in classpath; If applicable, HQL parser will be used.
03-12-2023 12:58:31.813 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03-12-2023 12:58:32.012 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@178f5b5b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@47baf547, org.springframework.security.web.context.SecurityContextHolderFilter@722e1bff, org.springframework.security.web.header.HeaderWriterFilter@e0faed6, org.springframework.security.web.authentication.logout.LogoutFilter@7dbc77ca, com.example.cryptoservice.security.filter.JwtAuthenticationFilter@408bb173, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28d2afd8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70f37190, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@fffb4a8, org.springframework.security.web.session.SessionManagementFilter@3181fbe7, org.springframework.security.web.access.ExceptionTranslationFilter@13231e7b, org.springframework.security.web.access.intercept.AuthorizationFilter@33ac7934]
03-12-2023 12:58:32.525 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 12:58:32.525 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/v3/api-docs/**']
03-12-2023 12:58:32.526 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 12:58:32.526 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/swagger-ui/**']
03-12-2023 12:58:32.604 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
03-12-2023 12:58:32.620 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 6.796 seconds (process running for 7.577)
03-12-2023 12:59:00.230 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 12:59:00.264 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 12:59:00.276 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 12:59:00.337 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 12:59:00.342 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 12:59:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 12:59:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 12:59:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 12:59:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 12:59:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:00:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:00:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:00:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:00:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:00:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:00:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:00:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:00:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:00:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:00:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:00:46.545 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
03-12-2023 13:00:46.547 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
03-12-2023 13:00:46.564 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 16 ms
03-12-2023 13:01:00.023 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:01:00.029 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:01:00.031 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:01:00.036 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:01:00.039 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:01:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:01:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:01:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:01:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:01:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:02:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:02:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:02:00.020 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:02:00.024 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:02:00.025 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:02:09.886 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 13:02:09.914 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
03-12-2023 13:02:09.918 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
03-12-2023 13:03:16.036 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 12103 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
03-12-2023 13:03:16.039 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
03-12-2023 13:03:16.959 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-12-2023 13:03:17.054 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 81 ms. Found 6 JPA repository interfaces.
03-12-2023 13:03:17.737 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-12-2023 13:03:17.752 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-12-2023 13:03:17.752 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
03-12-2023 13:03:17.965 [main] INFO  o.apache.jasper.servlet.TldScanner.log - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
03-12-2023 13:03:17.971 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-12-2023 13:03:17.971 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1886 ms
03-12-2023 13:03:17.997 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-12-2023 13:03:18.329 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
03-12-2023 13:03:18.331 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-12-2023 13:03:18.342 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
03-12-2023 13:03:18.510 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
03-12-2023 13:03:18.770 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:03:18.773 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:03:18.776 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:03:18.779 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:03:18.783 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:03:18.784 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-12-2023 13:03:18.794 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
03-12-2023 13:03:18.797 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:03:18.798 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
03-12-2023 13:03:18.800 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:03:18.801 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:03:18.872 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:03:18.873 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 30ms
03-12-2023 13:03:18.876 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:03:18.877 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:03:18.880 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:03:18.880 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 2ms
03-12-2023 13:03:18.882 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:03:18.885 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:03:18.886 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 4ms
03-12-2023 13:03:18.887 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:03:18.891 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:03:18.892 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 4ms
03-12-2023 13:03:18.894 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:03:18.897 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:03:18.897 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 3ms
03-12-2023 13:03:18.898 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:03:18.902 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:03:18.903 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 3ms
03-12-2023 13:03:18.904 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:03:18.906 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:03:18.907 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 2ms
03-12-2023 13:03:18.909 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:03:18.912 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:03:18.913 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-security-credentials.sql::raw::includeAll ran successfully in 3ms
03-12-2023 13:03:18.915 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:03:18.916 [main] INFO  liquibase.log - Update command completed successfully.
03-12-2023 13:03:18.918 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:03:18.918 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-12-2023 13:03:19.004 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-12-2023 13:03:19.081 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
03-12-2023 13:03:19.085 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
03-12-2023 13:03:19.488 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
03-12-2023 13:03:19.554 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
03-12-2023 13:03:20.761 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
03-12-2023 13:03:20.805 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 13:03:21.106 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory.<clinit> - Hibernate is in classpath; If applicable, HQL parser will be used.
03-12-2023 13:03:21.663 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03-12-2023 13:03:21.953 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@20711b02, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@52d9a150, org.springframework.security.web.context.SecurityContextHolderFilter@4d62bb8b, org.springframework.security.web.header.HeaderWriterFilter@437a4e61, org.springframework.security.web.authentication.logout.LogoutFilter@6153aca1, com.example.cryptoservice.security.filter.JwtAuthenticationFilter@45fa7fb7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d642682, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@65630116, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@476a38d9, org.springframework.security.web.session.SessionManagementFilter@28d2afd8, org.springframework.security.web.access.ExceptionTranslationFilter@6ea1fc9, org.springframework.security.web.access.intercept.AuthorizationFilter@fffb4a8]
03-12-2023 13:03:22.418 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 13:03:22.419 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/v3/api-docs/**']
03-12-2023 13:03:22.419 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 13:03:22.419 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/swagger-ui/**']
03-12-2023 13:03:22.485 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
03-12-2023 13:03:22.497 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 6.959 seconds (process running for 7.842)
03-12-2023 13:03:30.152 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:03:30.166 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:03:30.176 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:03:30.209 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:03:30.213 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:03:42.181 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
03-12-2023 13:03:42.182 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
03-12-2023 13:03:42.184 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 1 ms
03-12-2023 13:04:00.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:04:00.020 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:04:00.030 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:04:00.033 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:04:00.034 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:04:30.003 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:04:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:04:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:04:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:04:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:05:00.031 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:05:00.041 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:05:00.044 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:05:00.052 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:05:00.055 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:05:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:05:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:05:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:05:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:05:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:06:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:06:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:06:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:06:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:06:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:06:30.030 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:06:30.042 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:06:30.044 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:06:30.050 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:06:30.052 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:06:35.053 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 13:06:35.065 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
03-12-2023 13:06:35.069 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
03-12-2023 13:06:39.342 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 12167 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
03-12-2023 13:06:39.346 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
03-12-2023 13:06:40.198 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-12-2023 13:06:40.304 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 94 ms. Found 6 JPA repository interfaces.
03-12-2023 13:06:40.897 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-12-2023 13:06:40.908 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-12-2023 13:06:40.908 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
03-12-2023 13:06:41.081 [main] INFO  o.apache.jasper.servlet.TldScanner.log - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
03-12-2023 13:06:41.086 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-12-2023 13:06:41.087 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1691 ms
03-12-2023 13:06:41.113 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-12-2023 13:06:41.368 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
03-12-2023 13:06:41.370 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-12-2023 13:06:41.381 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
03-12-2023 13:06:41.541 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
03-12-2023 13:06:41.779 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:06:41.782 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:06:41.787 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:06:41.790 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:06:41.794 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:06:41.794 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-12-2023 13:06:41.806 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
03-12-2023 13:06:41.809 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:06:41.810 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
03-12-2023 13:06:41.812 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:06:41.812 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:06:41.881 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:06:41.881 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 32ms
03-12-2023 13:06:41.886 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:06:41.887 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:06:41.890 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:06:41.891 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 2ms
03-12-2023 13:06:41.892 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:06:41.896 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:06:41.897 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 4ms
03-12-2023 13:06:41.899 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:06:41.906 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:06:41.907 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 5ms
03-12-2023 13:06:41.909 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:06:41.913 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:06:41.914 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 4ms
03-12-2023 13:06:41.916 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:06:41.920 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:06:41.921 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 4ms
03-12-2023 13:06:41.923 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:06:41.927 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:06:41.928 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 3ms
03-12-2023 13:06:41.929 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:06:41.933 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:06:41.934 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-security-credentials.sql::raw::includeAll ran successfully in 3ms
03-12-2023 13:06:41.935 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:06:41.936 [main] INFO  liquibase.log - Update command completed successfully.
03-12-2023 13:06:41.938 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:06:41.938 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-12-2023 13:06:42.013 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-12-2023 13:06:42.098 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
03-12-2023 13:06:42.103 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
03-12-2023 13:06:42.413 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
03-12-2023 13:06:42.462 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
03-12-2023 13:06:43.508 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
03-12-2023 13:06:43.545 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 13:06:43.809 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory.<clinit> - Hibernate is in classpath; If applicable, HQL parser will be used.
03-12-2023 13:06:44.282 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03-12-2023 13:06:44.457 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@178f5b5b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@47baf547, org.springframework.security.web.context.SecurityContextHolderFilter@722e1bff, org.springframework.security.web.header.HeaderWriterFilter@e0faed6, org.springframework.security.web.authentication.logout.LogoutFilter@7dbc77ca, com.example.cryptoservice.security.filter.JwtAuthenticationFilter@408bb173, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28d2afd8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70f37190, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@fffb4a8, org.springframework.security.web.session.SessionManagementFilter@3181fbe7, org.springframework.security.web.access.ExceptionTranslationFilter@13231e7b, org.springframework.security.web.access.intercept.AuthorizationFilter@33ac7934]
03-12-2023 13:06:44.905 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 13:06:44.906 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/v3/api-docs/**']
03-12-2023 13:06:44.906 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 13:06:44.906 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/swagger-ui/**']
03-12-2023 13:06:44.976 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
03-12-2023 13:06:44.989 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 6.105 seconds (process running for 7.001)
03-12-2023 13:06:51.300 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
03-12-2023 13:06:51.301 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
03-12-2023 13:06:51.302 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 1 ms
03-12-2023 13:06:51.648 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:06:51.699 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into crypto_users (first_name,last_name,id) values (?,?,default)
03-12-2023 13:06:51.803 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into security_credentials (login,password,user_role,user_id,id) values (?,?,?,?,default)
03-12-2023 13:07:00.020 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:07:00.031 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:07:00.036 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:07:00.060 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:07:00.062 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:07:08.639 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 13:07:08.642 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
03-12-2023 13:07:08.645 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
03-12-2023 13:07:12.476 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 12174 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
03-12-2023 13:07:12.479 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
03-12-2023 13:07:13.399 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-12-2023 13:07:13.498 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 87 ms. Found 6 JPA repository interfaces.
03-12-2023 13:07:14.138 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-12-2023 13:07:14.151 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-12-2023 13:07:14.151 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
03-12-2023 13:07:14.340 [main] INFO  o.apache.jasper.servlet.TldScanner.log - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
03-12-2023 13:07:14.345 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-12-2023 13:07:14.346 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1793 ms
03-12-2023 13:07:14.375 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-12-2023 13:07:14.649 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
03-12-2023 13:07:14.650 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-12-2023 13:07:14.661 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
03-12-2023 13:07:14.827 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
03-12-2023 13:07:15.052 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:15.055 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:15.059 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:15.062 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:15.066 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:15.067 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-12-2023 13:07:15.079 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
03-12-2023 13:07:15.082 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:15.084 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
03-12-2023 13:07:15.086 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:15.087 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:15.154 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:07:15.155 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 28ms
03-12-2023 13:07:15.159 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:15.160 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:15.163 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:07:15.164 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 2ms
03-12-2023 13:07:15.165 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:15.169 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:07:15.170 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 4ms
03-12-2023 13:07:15.171 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:15.174 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:07:15.175 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 3ms
03-12-2023 13:07:15.176 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:15.179 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:07:15.180 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 3ms
03-12-2023 13:07:15.181 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:15.184 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:07:15.185 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 2ms
03-12-2023 13:07:15.186 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:15.188 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:07:15.189 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 3ms
03-12-2023 13:07:15.190 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:15.193 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:07:15.193 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-security-credentials.sql::raw::includeAll ran successfully in 2ms
03-12-2023 13:07:15.194 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:15.195 [main] INFO  liquibase.log - Update command completed successfully.
03-12-2023 13:07:15.197 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:15.197 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-12-2023 13:07:15.274 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-12-2023 13:07:15.336 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
03-12-2023 13:07:15.344 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
03-12-2023 13:07:15.661 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
03-12-2023 13:07:15.717 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
03-12-2023 13:07:16.814 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
03-12-2023 13:07:16.852 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 13:07:17.126 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory.<clinit> - Hibernate is in classpath; If applicable, HQL parser will be used.
03-12-2023 13:07:17.568 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03-12-2023 13:07:17.717 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@52d9a150, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@476a38d9, org.springframework.security.web.context.SecurityContextHolderFilter@70f37190, org.springframework.security.web.header.HeaderWriterFilter@268eefe7, org.springframework.security.web.authentication.logout.LogoutFilter@30b2d267, com.example.cryptoservice.security.filter.JwtAuthenticationFilter@32eeef08, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6afdb486, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@623dc0b8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@79a12552, org.springframework.security.web.session.SessionManagementFilter@77a35b2f, org.springframework.security.web.access.ExceptionTranslationFilter@75e068dc, org.springframework.security.web.access.intercept.AuthorizationFilter@5dc90de7]
03-12-2023 13:07:18.128 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 13:07:18.129 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/v3/api-docs/**']
03-12-2023 13:07:18.129 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 13:07:18.129 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/swagger-ui/**']
03-12-2023 13:07:18.192 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
03-12-2023 13:07:18.204 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 6.308 seconds (process running for 6.977)
03-12-2023 13:07:22.718 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
03-12-2023 13:07:22.719 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
03-12-2023 13:07:22.721 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 1 ms
03-12-2023 13:07:30.301 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:07:30.315 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:07:30.327 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:07:30.384 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:07:30.389 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:07:37.508 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 13:07:37.512 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
03-12-2023 13:07:37.514 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
03-12-2023 13:07:41.524 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 12184 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
03-12-2023 13:07:41.527 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
03-12-2023 13:07:42.422 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-12-2023 13:07:42.532 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 96 ms. Found 6 JPA repository interfaces.
03-12-2023 13:07:43.131 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-12-2023 13:07:43.140 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-12-2023 13:07:43.140 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
03-12-2023 13:07:43.318 [main] INFO  o.apache.jasper.servlet.TldScanner.log - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
03-12-2023 13:07:43.324 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-12-2023 13:07:43.324 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1720 ms
03-12-2023 13:07:43.348 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-12-2023 13:07:43.593 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
03-12-2023 13:07:43.595 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-12-2023 13:07:43.606 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
03-12-2023 13:07:43.770 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
03-12-2023 13:07:44.001 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:44.003 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:44.007 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:44.010 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:44.014 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:44.014 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-12-2023 13:07:44.026 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
03-12-2023 13:07:44.029 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:44.030 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
03-12-2023 13:07:44.032 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:44.033 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:44.099 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:07:44.100 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 29ms
03-12-2023 13:07:44.104 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:44.105 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:44.108 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:07:44.108 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 2ms
03-12-2023 13:07:44.109 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:44.113 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:07:44.114 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 4ms
03-12-2023 13:07:44.115 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:44.119 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:07:44.120 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 4ms
03-12-2023 13:07:44.121 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:44.124 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:07:44.125 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 3ms
03-12-2023 13:07:44.126 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:44.130 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:07:44.130 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 3ms
03-12-2023 13:07:44.132 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:44.134 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:07:44.136 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 3ms
03-12-2023 13:07:44.137 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:44.140 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 13:07:44.141 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-security-credentials.sql::raw::includeAll ran successfully in 3ms
03-12-2023 13:07:44.143 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:44.144 [main] INFO  liquibase.log - Update command completed successfully.
03-12-2023 13:07:44.145 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 13:07:44.146 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-12-2023 13:07:44.222 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-12-2023 13:07:44.296 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
03-12-2023 13:07:44.300 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
03-12-2023 13:07:44.624 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
03-12-2023 13:07:44.677 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
03-12-2023 13:07:45.688 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
03-12-2023 13:07:45.728 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 13:07:45.971 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory.<clinit> - Hibernate is in classpath; If applicable, HQL parser will be used.
03-12-2023 13:07:46.396 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03-12-2023 13:07:46.557 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@30b2d267, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5a740449, org.springframework.security.web.context.SecurityContextHolderFilter@1784d711, org.springframework.security.web.header.HeaderWriterFilter@3299ee2c, org.springframework.security.web.authentication.logout.LogoutFilter@9203db8, com.example.cryptoservice.security.filter.JwtAuthenticationFilter@67cd1db3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53b81a55, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@722e1bff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4f66f2dd, org.springframework.security.web.session.SessionManagementFilter@268eefe7, org.springframework.security.web.access.ExceptionTranslationFilter@458500d1, org.springframework.security.web.access.intercept.AuthorizationFilter@184e5c44]
03-12-2023 13:07:46.986 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 13:07:46.987 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/v3/api-docs/**']
03-12-2023 13:07:46.987 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 13:07:46.987 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/swagger-ui/**']
03-12-2023 13:07:47.043 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
03-12-2023 13:07:47.056 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 6.249 seconds (process running for 6.871)
03-12-2023 13:08:00.187 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:08:00.209 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:08:00.217 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:08:00.266 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:08:00.270 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:08:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:08:30.020 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:08:30.022 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:08:30.024 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:08:30.025 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:08:33.129 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
03-12-2023 13:08:33.130 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
03-12-2023 13:08:33.135 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 5 ms
03-12-2023 13:08:33.514 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:08:33.544 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into crypto_users (first_name,last_name,id) values (?,?,default)
03-12-2023 13:08:33.686 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into security_credentials (login,password,user_role,user_id,id) values (?,?,?,?,default)
03-12-2023 13:09:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:09:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:09:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:09:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:09:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:09:30.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:09:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:09:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:09:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:09:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:10:00.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:10:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:10:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:10:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:10:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:10:05.854 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:10:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:10:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:10:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:10:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:10:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:10:59.086 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:10:59.092 [http-nio-8080-exec-6] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:10:59.172 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:10:59.190 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:10:59.193 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - insert into accounts (account_type,balance,created,currency_code,user_id,id) values (?,?,?,?,?,default)
03-12-2023 13:11:00.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:11:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:11:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:11:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:11:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:11:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:11:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:11:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:11:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:11:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:11:36.780 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:11:36.782 [http-nio-8080-exec-7] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:11:36.785 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:11:36.786 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:11:36.787 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - insert into accounts (account_type,balance,created,currency_code,user_id,id) values (?,?,?,?,?,default)
03-12-2023 13:12:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:12:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:12:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:12:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:12:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:12:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:12:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:12:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:12:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:12:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:12:50.301 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:12:50.306 [http-nio-8080-exec-10] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:12:50.313 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:12:50.318 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.user_id=?
03-12-2023 13:12:50.319 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:13:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:13:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:13:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:13:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:13:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:13:30.030 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:13:30.046 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:13:30.049 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:13:30.058 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:13:30.061 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:14:00.003 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:14:00.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:14:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:14:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:14:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:14:09.281 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:14:09.296 [http-nio-8080-exec-3] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:14:09.336 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:14:09.342 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:14:09.358 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 13:14:30.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:14:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:14:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:14:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:14:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:15:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:15:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:15:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:15:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:15:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:15:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:15:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:15:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:15:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:15:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:16:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:16:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:16:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:16:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:16:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:16:23.995 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:16:23.999 [http-nio-8080-exec-6] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:16:24.026 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.base_currency,c1_0.last_updated,c1_0.rate,c1_0.target_currency from crypto_rates c1_0
03-12-2023 13:16:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:16:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:16:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:16:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:16:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:16:47.366 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:16:47.368 [http-nio-8080-exec-8] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:16:47.446 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.base_currency,c1_0.last_updated,c1_0.rate,c1_0.target_currency from crypto_rates c1_0 where c1_0.base_currency=? and c1_0.target_currency=?
03-12-2023 13:17:00.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:17:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:17:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:17:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:17:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:17:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:17:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:17:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:17:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:17:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:18:00.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:18:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:18:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:18:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:18:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:18:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:18:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:18:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:18:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:18:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:18:41.998 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:18:42.001 [http-nio-8080-exec-10] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:18:42.152 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:18:42.153 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:18:42.158 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 13:18:42.159 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:18:42.166 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 13:18:42.168 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.base_currency,c1_0.last_updated,c1_0.rate,c1_0.target_currency from crypto_rates c1_0 where c1_0.base_currency=? and c1_0.target_currency=?
03-12-2023 13:18:42.171 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.amount,t1_0.currency_code,t1_0.last_updated from transaction_fees t1_0 where t1_0.currency_code=?
03-12-2023 13:18:42.179 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - insert into transactions (account_id,amount,created,transaction_type,id) values (?,?,?,?,default)
03-12-2023 13:18:42.181 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - insert into transactions (account_id,amount,created,transaction_type,id) values (?,?,?,?,default)
03-12-2023 13:18:42.182 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:18:42.183 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:18:42.184 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - update transaction_fees set amount=?,currency_code=?,last_updated=? where id=?
03-12-2023 13:18:51.407 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:18:51.415 [http-nio-8080-exec-1] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:18:51.417 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:18:51.420 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.user_id=?
03-12-2023 13:18:51.422 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:19:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:19:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:19:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:19:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:19:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:19:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:19:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:19:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:19:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:19:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:20:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:20:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:20:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:20:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:20:00.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:20:21.669 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:20:21.673 [http-nio-8080-exec-4] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:20:21.694 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:20:21.697 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:20:21.701 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 13:20:21.722 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.first_name,u1_0.last_name from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
03-12-2023 13:20:21.752 [http-nio-8080-exec-4] ERROR c.e.c.e.ExceptionResolver.unsupportedOperationByAccountTypeException - Account with id: 2 is deposit account.
03-12-2023 13:20:27.190 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:20:27.192 [http-nio-8080-exec-7] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:20:27.196 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:20:27.198 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:20:27.200 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 13:20:27.201 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.first_name,u1_0.last_name from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
03-12-2023 13:20:27.205 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.amount,t1_0.currency_code,t1_0.last_updated from transaction_fees t1_0 where t1_0.currency_code=?
03-12-2023 13:20:27.207 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - insert into transactions (account_id,amount,created,transaction_type,id) values (?,?,?,?,default)
03-12-2023 13:20:27.210 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - insert into transactions (account_id,amount,created,transaction_type,id) values (?,?,?,?,default)
03-12-2023 13:20:27.211 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:20:27.213 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:20:27.214 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - update transaction_fees set amount=?,currency_code=?,last_updated=? where id=?
03-12-2023 13:20:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:20:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:20:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:20:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:20:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:20:33.284 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:20:33.285 [http-nio-8080-exec-8] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:20:33.286 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:20:33.288 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.user_id=?
03-12-2023 13:20:33.289 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:21:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:21:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:21:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:21:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:21:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:21:03.869 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:21:03.870 [http-nio-8080-exec-2] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:21:03.881 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:21:03.882 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:21:03.883 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 13:21:03.885 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into accounts (account_type,balance,created,currency_code,user_id,id) values (?,?,?,?,?,default)
03-12-2023 13:21:03.886 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into transactions (account_id,amount,created,transaction_type,id) values (?,?,?,?,default)
03-12-2023 13:21:03.888 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:21:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:21:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:21:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:21:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:21:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:21:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:21:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:21:46.151 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:21:46.152 [http-nio-8080-exec-1] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:21:46.155 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:21:46.156 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:21:46.158 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 13:21:46.160 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:21:46.163 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 13:21:46.164 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into transactions (account_id,amount,created,transaction_type,id) values (?,?,?,?,default)
03-12-2023 13:21:46.165 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:21:46.166 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:21:52.610 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:21:52.611 [http-nio-8080-exec-3] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:21:52.613 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:21:52.614 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:21:52.618 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 13:21:52.620 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - insert into accounts (account_type,balance,created,currency_code,user_id,id) values (?,?,?,?,?,default)
03-12-2023 13:21:52.624 [http-nio-8080-exec-3] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: 23505, SQLState: 23505
03-12-2023 13:21:52.624 [http-nio-8080-exec-3] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - Нарушение уникального индекса или первичного ключа: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:9 */ CAST(4 AS BIGINT), 'USDT', 'DEPOSIT')"
Unique index or primary key violation: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:9 */ CAST(4 AS BIGINT), 'USDT', 'DEPOSIT')"; SQL statement:
insert into accounts (account_type,balance,created,currency_code,user_id,id) values (?,?,?,?,?,default) [23505-214]
03-12-2023 13:21:52.660 [http-nio-8080-exec-3] ERROR c.e.c.e.ExceptionResolver.jdbcSQLIntegrityConstraintViolationException - Нарушение уникального индекса или первичного ключа: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:9 */ CAST(4 AS BIGINT), 'USDT', 'DEPOSIT')"
Unique index or primary key violation: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:9 */ CAST(4 AS BIGINT), 'USDT', 'DEPOSIT')"; SQL statement:
insert into accounts (account_type,balance,created,currency_code,user_id,id) values (?,?,?,?,?,default) [23505-214]
03-12-2023 13:22:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:22:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:22:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:22:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:22:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:22:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:22:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:22:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:22:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:22:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:22:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:22:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:22:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:22:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:22:33.457 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:22:33.459 [http-nio-8080-exec-5] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:22:33.462 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:22:33.464 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:22:33.466 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 13:22:33.467 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - insert into accounts (account_type,balance,created,currency_code,user_id,id) values (?,?,?,?,?,default)
03-12-2023 13:22:33.468 [http-nio-8080-exec-5] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: 23505, SQLState: 23505
03-12-2023 13:22:33.468 [http-nio-8080-exec-5] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - Нарушение уникального индекса или первичного ключа: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:9 */ CAST(4 AS BIGINT), 'USDT', 'DEPOSIT')"
Unique index or primary key violation: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:9 */ CAST(4 AS BIGINT), 'USDT', 'DEPOSIT')"; SQL statement:
insert into accounts (account_type,balance,created,currency_code,user_id,id) values (?,?,?,?,?,default) [23505-214]
03-12-2023 13:22:33.470 [http-nio-8080-exec-5] ERROR c.e.c.e.ExceptionResolver.jdbcSQLIntegrityConstraintViolationException - Нарушение уникального индекса или первичного ключа: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:9 */ CAST(4 AS BIGINT), 'USDT', 'DEPOSIT')"
Unique index or primary key violation: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:9 */ CAST(4 AS BIGINT), 'USDT', 'DEPOSIT')"; SQL statement:
insert into accounts (account_type,balance,created,currency_code,user_id,id) values (?,?,?,?,?,default) [23505-214]
03-12-2023 13:23:00.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:23:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:23:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:23:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:23:00.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:23:00.020 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:23:00.022 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:23:30.027 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:23:30.039 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:23:30.043 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:23:30.044 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:23:30.052 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:23:30.055 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:23:30.056 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:23:38.928 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:23:38.933 [http-nio-8080-exec-7] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:23:38.948 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:23:38.956 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:23:38.959 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 13:23:38.962 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - insert into accounts (account_type,balance,created,currency_code,user_id,id) values (?,?,?,?,?,default)
03-12-2023 13:23:38.965 [http-nio-8080-exec-7] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: 23505, SQLState: 23505
03-12-2023 13:23:38.965 [http-nio-8080-exec-7] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - Нарушение уникального индекса или первичного ключа: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:9 */ CAST(4 AS BIGINT), 'USDT', 'DEPOSIT')"
Unique index or primary key violation: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:9 */ CAST(4 AS BIGINT), 'USDT', 'DEPOSIT')"; SQL statement:
insert into accounts (account_type,balance,created,currency_code,user_id,id) values (?,?,?,?,?,default) [23505-214]
03-12-2023 13:23:38.968 [http-nio-8080-exec-7] ERROR c.e.c.e.ExceptionResolver.jdbcSQLIntegrityConstraintViolationException - Нарушение уникального индекса или первичного ключа: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:9 */ CAST(4 AS BIGINT), 'USDT', 'DEPOSIT')"
Unique index or primary key violation: "PUBLIC.ACCOUNTS_CURRENCY_CODE_ACCOUNT_TYPE_INDEX ON PUBLIC.ACCOUNTS(USER_ID NULLS FIRST, CURRENCY_CODE NULLS FIRST, ACCOUNT_TYPE NULLS FIRST) VALUES ( /* key:9 */ CAST(4 AS BIGINT), 'USDT', 'DEPOSIT')"; SQL statement:
insert into accounts (account_type,balance,created,currency_code,user_id,id) values (?,?,?,?,?,default) [23505-214]
03-12-2023 13:24:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:24:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:24:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:24:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:24:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:24:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:24:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:24:14.958 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:24:14.960 [http-nio-8080-exec-8] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:24:14.961 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:24:14.966 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:24:14.970 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 join accounts a1_0 on a1_0.id=t1_0.account_id where a1_0.user_id=?
03-12-2023 13:24:14.972 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.first_name,u1_0.last_name from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
03-12-2023 13:24:14.973 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.first_name,u1_0.last_name from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
03-12-2023 13:24:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:24:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:24:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:24:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:24:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:24:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:24:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:24:57.951 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:24:57.967 [http-nio-8080-exec-2] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:24:57.971 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:24:57.975 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:24:57.983 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 join accounts a1_0 on a1_0.id=t1_0.account_id where t1_0.id=? and a1_0.user_id=?
03-12-2023 13:24:57.991 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.first_name,u1_0.last_name from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
03-12-2023 13:25:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:25:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:25:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:25:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:25:00.022 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:25:00.025 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:25:00.026 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:25:01.607 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:25:01.608 [http-nio-8080-exec-10] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:25:01.609 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:25:01.610 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:25:01.611 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 join accounts a1_0 on a1_0.id=t1_0.account_id where t1_0.id=? and a1_0.user_id=?
03-12-2023 13:25:01.615 [http-nio-8080-exec-10] ERROR c.e.c.e.ExceptionResolver.transactionNotFoundException - Transaction with id 1 not found
03-12-2023 13:25:11.161 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:25:11.167 [http-nio-8080-exec-1] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:25:11.169 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:25:11.172 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:25:11.175 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 join accounts a1_0 on a1_0.id=t1_0.account_id where t1_0.id=? and a1_0.user_id=?
03-12-2023 13:25:11.177 [http-nio-8080-exec-1] ERROR c.e.c.e.ExceptionResolver.transactionNotFoundException - Transaction with id 5 not found
03-12-2023 13:25:14.590 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:25:14.592 [http-nio-8080-exec-3] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginmultivan
03-12-2023 13:25:14.594 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 13:25:14.595 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:25:14.597 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 join accounts a1_0 on a1_0.id=t1_0.account_id where t1_0.id=? and a1_0.user_id=?
03-12-2023 13:25:14.599 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.first_name,u1_0.last_name from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
03-12-2023 13:25:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:25:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:25:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:25:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:25:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:25:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:25:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:26:00.003 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:26:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:26:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:26:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:26:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:26:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:26:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:26:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:26:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:26:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:26:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:26:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:26:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:26:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:27:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:27:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:27:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:27:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:27:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:27:00.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:27:00.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:27:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:27:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:27:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:27:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:27:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:27:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:27:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:28:00.004 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:28:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:28:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:28:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:28:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:28:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:28:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:28:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:28:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:28:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:28:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:28:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:28:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:28:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:28:47.346 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:29:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:29:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:29:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:29:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:29:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:29:00.022 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:29:00.023 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:29:07.824 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:29:07.826 [http-nio-8080-exec-7] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginstas
03-12-2023 13:29:07.905 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 order by t1_0.amount offset ? rows fetch first ? rows only
03-12-2023 13:29:07.915 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.first_name,u1_0.last_name from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
03-12-2023 13:29:07.917 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.first_name,u1_0.last_name from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
03-12-2023 13:29:07.919 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.first_name,u1_0.last_name from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
03-12-2023 13:29:07.920 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.first_name,u1_0.last_name from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
03-12-2023 13:29:07.942 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select count(t1_0.id) from transactions t1_0
03-12-2023 13:29:30.003 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:29:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:29:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:29:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:29:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:29:30.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:29:30.019 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:30:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:30:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:30:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:30:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:30:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:30:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:30:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:30:01.325 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:30:01.326 [http-nio-8080-exec-8] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginstas
03-12-2023 13:30:01.332 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0
03-12-2023 13:30:18.705 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:30:18.708 [http-nio-8080-exec-9] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginstas
03-12-2023 13:30:18.714 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 order by a1_0.balance offset ? rows fetch first ? rows only
03-12-2023 13:30:18.714 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:30:18.715 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:30:18.715 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:30:30.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:30:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:30:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:30:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:30:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:30:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:30:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:31:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:31:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:31:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:31:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:31:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:31:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:31:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:31:18.160 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:31:18.163 [http-nio-8080-exec-2] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginstas
03-12-2023 13:31:18.177 [http-nio-8080-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver.logException - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
03-12-2023 13:31:27.385 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:31:27.386 [http-nio-8080-exec-10] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginstas
03-12-2023 13:31:27.387 [http-nio-8080-exec-10] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver.logException - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
03-12-2023 13:31:30.004 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:31:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:31:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:31:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:31:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:31:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:31:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:32:00.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:32:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:32:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:32:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:32:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:32:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:32:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:32:27.400 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:32:27.403 [http-nio-8080-exec-1] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginstas
03-12-2023 13:32:27.415 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 13:32:27.423 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.first_name,u1_0.last_name from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
03-12-2023 13:32:27.452 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - delete from accounts where id=?
03-12-2023 13:32:27.457 [http-nio-8080-exec-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: 23503, SQLState: 23503
03-12-2023 13:32:27.457 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - Нарушение ссылочной целостности: "CONSTRAINT_FE: PUBLIC.TRANSACTIONS FOREIGN KEY(ACCOUNT_ID) REFERENCES PUBLIC.ACCOUNTS(ID) (CAST(8 AS BIGINT))"
Referential integrity constraint violation: "CONSTRAINT_FE: PUBLIC.TRANSACTIONS FOREIGN KEY(ACCOUNT_ID) REFERENCES PUBLIC.ACCOUNTS(ID) (CAST(8 AS BIGINT))"; SQL statement:
delete from accounts where id=? [23503-214]
03-12-2023 13:32:27.461 [http-nio-8080-exec-1] ERROR c.e.c.e.ExceptionResolver.jdbcSQLIntegrityConstraintViolationException - Нарушение ссылочной целостности: "CONSTRAINT_FE: PUBLIC.TRANSACTIONS FOREIGN KEY(ACCOUNT_ID) REFERENCES PUBLIC.ACCOUNTS(ID) (CAST(8 AS BIGINT))"
Referential integrity constraint violation: "CONSTRAINT_FE: PUBLIC.TRANSACTIONS FOREIGN KEY(ACCOUNT_ID) REFERENCES PUBLIC.ACCOUNTS(ID) (CAST(8 AS BIGINT))"; SQL statement:
delete from accounts where id=? [23503-214]
03-12-2023 13:32:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:32:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:32:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:32:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:32:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:32:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:32:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:33:00.004 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 13:33:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:33:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:33:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 13:33:00.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:33:00.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:33:00.019 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 13:33:02.763 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 13:33:02.772 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
03-12-2023 13:33:02.778 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
03-12-2023 14:11:32.105 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 12666 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
03-12-2023 14:11:32.109 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
03-12-2023 14:11:33.117 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-12-2023 14:11:33.225 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 94 ms. Found 6 JPA repository interfaces.
03-12-2023 14:11:33.842 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-12-2023 14:11:33.854 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-12-2023 14:11:33.854 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
03-12-2023 14:11:34.052 [main] INFO  o.apache.jasper.servlet.TldScanner.log - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
03-12-2023 14:11:34.067 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-12-2023 14:11:34.068 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1898 ms
03-12-2023 14:11:34.095 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-12-2023 14:11:34.396 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
03-12-2023 14:11:34.398 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-12-2023 14:11:34.410 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
03-12-2023 14:11:34.574 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
03-12-2023 14:11:34.832 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:11:34.836 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:11:34.840 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:11:34.843 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:11:34.848 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:11:34.849 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-12-2023 14:11:34.859 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
03-12-2023 14:11:34.863 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:11:34.864 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
03-12-2023 14:11:34.866 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:11:34.867 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:11:34.941 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:11:34.942 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 31ms
03-12-2023 14:11:34.946 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:11:34.947 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:11:34.950 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:11:34.951 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 2ms
03-12-2023 14:11:34.952 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:11:34.956 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:11:34.957 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 4ms
03-12-2023 14:11:34.959 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:11:34.963 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:11:34.964 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:11:34.965 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:11:34.969 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:11:34.969 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:11:34.971 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:11:34.974 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:11:34.975 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:11:34.976 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:11:34.979 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:11:34.980 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 2ms
03-12-2023 14:11:34.981 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:11:34.984 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:11:34.984 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-security-credentials.sql::raw::includeAll ran successfully in 2ms
03-12-2023 14:11:34.986 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:11:34.987 [main] INFO  liquibase.log - Update command completed successfully.
03-12-2023 14:11:34.989 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:11:34.989 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-12-2023 14:11:35.076 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-12-2023 14:11:35.141 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
03-12-2023 14:11:35.145 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
03-12-2023 14:11:35.514 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
03-12-2023 14:11:35.582 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
03-12-2023 14:11:36.657 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
03-12-2023 14:11:36.695 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 14:11:36.990 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory.<clinit> - Hibernate is in classpath; If applicable, HQL parser will be used.
03-12-2023 14:11:37.541 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03-12-2023 14:11:37.729 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@30b2d267, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5a740449, org.springframework.security.web.context.SecurityContextHolderFilter@1784d711, org.springframework.security.web.header.HeaderWriterFilter@3299ee2c, org.springframework.security.web.authentication.logout.LogoutFilter@9203db8, com.example.cryptoservice.security.filter.JwtAuthenticationFilter@67cd1db3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53b81a55, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@722e1bff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4f66f2dd, org.springframework.security.web.session.SessionManagementFilter@268eefe7, org.springframework.security.web.access.ExceptionTranslationFilter@458500d1, org.springframework.security.web.access.intercept.AuthorizationFilter@184e5c44]
03-12-2023 14:11:38.262 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 14:11:38.262 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/v3/api-docs/**']
03-12-2023 14:11:38.263 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 14:11:38.263 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/swagger-ui/**']
03-12-2023 14:11:38.328 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
03-12-2023 14:11:38.365 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 6.845 seconds (process running for 7.62)
03-12-2023 14:12:00.166 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:12:00.183 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:12:00.197 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:12:00.235 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:12:00.239 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:12:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:12:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:12:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:12:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:12:30.022 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:13:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:13:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:13:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:13:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:13:00.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:13:03.113 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
03-12-2023 14:13:03.116 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
03-12-2023 14:13:03.120 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 2 ms
03-12-2023 14:13:03.291 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:13:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:13:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:13:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:13:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:13:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:13:43.656 [http-nio-8080-exec-3] INFO  c.e.c.security.service.JwtUtils.validateToken - Expired JWT token: io.jsonwebtoken.ExpiredJwtException: JWT expired at 2023-12-03T13:40:06Z. Current time: 2023-12-03T14:13:43Z, a difference of 2017655 milliseconds.  Allowed clock skew: 0 milliseconds.
03-12-2023 14:13:53.085 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:13:53.094 [http-nio-8080-exec-4] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:13:53.465 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:13:53.485 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:13:53.494 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - insert into accounts (account_type,balance,created,currency_code,user_id,id) values (?,?,?,?,?,default)
03-12-2023 14:14:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:14:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:14:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:14:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:14:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:14:23.637 [http-nio-8080-exec-5] INFO  c.e.c.security.service.JwtUtils.validateToken - Expired JWT token: io.jsonwebtoken.ExpiredJwtException: JWT expired at 2023-12-03T13:40:06Z. Current time: 2023-12-03T14:14:23Z, a difference of 2057637 milliseconds.  Allowed clock skew: 0 milliseconds.
03-12-2023 14:14:30.003 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:14:30.004 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:14:30.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:14:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:14:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:14:31.614 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:14:31.622 [http-nio-8080-exec-6] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:14:31.734 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:14:31.736 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:14:31.752 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 14:14:31.754 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:14:31.758 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 14:14:31.765 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - insert into transactions (account_id,amount,created,transaction_type,id) values (?,?,?,?,default)
03-12-2023 14:14:31.767 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:14:31.768 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:14:48.209 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:14:48.210 [http-nio-8080-exec-7] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:14:48.212 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:14:48.215 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:14:48.221 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 join accounts a1_0 on a1_0.id=t1_0.account_id where a1_0.user_id=?
03-12-2023 14:14:48.229 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.first_name,u1_0.last_name from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
03-12-2023 14:14:48.233 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.first_name,u1_0.last_name from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
03-12-2023 14:15:00.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:15:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:15:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:15:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:15:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:15:15.769 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:15:15.772 [http-nio-8080-exec-8] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:15:15.779 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:15:15.781 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:15:15.784 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 14:15:15.788 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:15:15.789 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.currency_code=? and a1_0.account_type=? and a1_0.user_id=?
03-12-2023 14:15:15.794 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - insert into transactions (account_id,amount,created,transaction_type,id) values (?,?,?,?,default)
03-12-2023 14:15:15.795 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:15:30.004 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:15:30.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:15:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:15:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:15:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:15:31.008 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:15:31.009 [http-nio-8080-exec-9] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:15:42.232 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:15:42.235 [http-nio-8080-exec-10] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:15:42.237 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:15:42.244 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.user_id=?
03-12-2023 14:15:42.245 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:16:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:16:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:16:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:16:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:16:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:16:15.114 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:16:15.135 [http-nio-8080-exec-1] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:16:15.162 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:16:15.169 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:16:15.174 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 14:16:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:16:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:16:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:16:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:16:30.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:17:00.040 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:17:00.059 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:17:00.068 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:17:00.075 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:17:00.078 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:17:30.002 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:17:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:17:30.019 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:17:30.020 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:17:30.022 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:18:00.201 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 12740 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
03-12-2023 14:18:00.205 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
03-12-2023 14:18:01.231 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-12-2023 14:18:01.340 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 96 ms. Found 6 JPA repository interfaces.
03-12-2023 14:18:01.940 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-12-2023 14:18:01.953 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-12-2023 14:18:01.953 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
03-12-2023 14:18:02.231 [main] INFO  o.apache.jasper.servlet.TldScanner.log - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
03-12-2023 14:18:02.237 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-12-2023 14:18:02.237 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1982 ms
03-12-2023 14:18:02.272 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-12-2023 14:18:02.537 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
03-12-2023 14:18:02.538 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-12-2023 14:18:02.549 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
03-12-2023 14:18:02.710 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
03-12-2023 14:18:02.945 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:18:02.947 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:18:02.951 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:18:02.954 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:18:02.958 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:18:02.959 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-12-2023 14:18:02.970 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
03-12-2023 14:18:02.974 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:18:02.974 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
03-12-2023 14:18:02.976 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:18:02.977 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:18:03.044 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:18:03.044 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 29ms
03-12-2023 14:18:03.049 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:18:03.050 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:18:03.053 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:18:03.054 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 2ms
03-12-2023 14:18:03.055 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:18:03.059 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:18:03.060 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 4ms
03-12-2023 14:18:03.061 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:18:03.064 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:18:03.065 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:18:03.066 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:18:03.069 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:18:03.070 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:18:03.071 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:18:03.073 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:18:03.074 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:18:03.075 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:18:03.077 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:18:03.078 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 2ms
03-12-2023 14:18:03.079 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:18:03.082 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:18:03.083 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-security-credentials.sql::raw::includeAll ran successfully in 2ms
03-12-2023 14:18:03.084 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:18:03.084 [main] INFO  liquibase.log - Update command completed successfully.
03-12-2023 14:18:03.086 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:18:03.086 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-12-2023 14:18:03.196 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-12-2023 14:18:03.262 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
03-12-2023 14:18:03.266 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
03-12-2023 14:18:03.614 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
03-12-2023 14:18:03.668 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
03-12-2023 14:18:04.682 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
03-12-2023 14:18:04.719 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 14:18:04.981 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory.<clinit> - Hibernate is in classpath; If applicable, HQL parser will be used.
03-12-2023 14:18:05.451 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03-12-2023 14:18:05.598 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6527aa0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6153aca1, org.springframework.security.web.context.SecurityContextHolderFilter@704ca8a8, org.springframework.security.web.header.HeaderWriterFilter@458500d1, org.springframework.security.web.authentication.logout.LogoutFilter@5ba7391b, com.example.cryptoservice.security.filter.JwtAuthenticationFilter@7a3ab73a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1784d711, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c8e99, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@30b2d267, org.springframework.security.web.session.SessionManagementFilter@75e068dc, org.springframework.security.web.access.ExceptionTranslationFilter@154fcedd, org.springframework.security.web.access.intercept.AuthorizationFilter@4c25687b]
03-12-2023 14:18:06.071 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 14:18:06.072 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/v3/api-docs/**']
03-12-2023 14:18:06.072 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 14:18:06.072 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/swagger-ui/**']
03-12-2023 14:18:06.142 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
03-12-2023 14:18:06.158 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 6.575 seconds (process running for 7.587)
03-12-2023 14:18:30.155 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:18:30.169 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:18:30.179 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:18:30.216 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:18:30.221 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:19:00.031 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:19:00.042 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:19:00.044 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:19:00.050 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:19:00.053 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:19:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:19:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:19:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:19:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:19:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:19:38.387 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
03-12-2023 14:19:38.389 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
03-12-2023 14:19:38.392 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 1 ms
03-12-2023 14:19:38.647 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:19:38.656 [http-nio-8080-exec-2] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:19:38.903 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:19:38.916 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:19:38.922 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 14:19:38.928 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:19:38.929 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.currency_code=? and a1_0.account_type=? and a1_0.user_id=?
03-12-2023 14:19:38.942 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into transactions (account_id,amount,created,transaction_type,id) values (?,?,?,?,default)
03-12-2023 14:19:49.782 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:19:49.791 [http-nio-8080-exec-3] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:19:49.794 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:19:49.797 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.user_id=?
03-12-2023 14:19:49.799 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:20:00.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:20:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:20:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:20:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:20:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:20:29.004 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:20:29.006 [http-nio-8080-exec-4] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:20:29.010 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:20:29.013 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:20:29.015 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 14:20:29.020 [http-nio-8080-exec-4] ERROR c.e.c.e.ExceptionResolver.accountNotFoundException - Account with id 7 not found
03-12-2023 14:20:30.004 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:20:30.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:20:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:20:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:20:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:21:00.042 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:21:00.064 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:21:00.083 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:21:00.099 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:21:00.111 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:21:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:21:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:21:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:21:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:21:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:22:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:22:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:22:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:22:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:22:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:22:03.475 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:22:03.477 [http-nio-8080-exec-7] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:22:03.485 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:22:03.507 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.user_id=?
03-12-2023 14:22:03.508 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:22:12.223 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:22:12.225 [http-nio-8080-exec-8] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:22:12.227 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:22:12.229 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:22:12.237 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select t1_0.id,t1_0.account_id,t1_0.amount,t1_0.created,t1_0.transaction_type from transactions t1_0 join accounts a1_0 on a1_0.id=t1_0.account_id where a1_0.user_id=?
03-12-2023 14:22:12.266 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.first_name,u1_0.last_name from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
03-12-2023 14:22:12.269 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id,u1_0.id,u1_0.first_name,u1_0.last_name from accounts a1_0 join crypto_users u1_0 on u1_0.id=a1_0.user_id where a1_0.id=?
03-12-2023 14:22:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:22:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:22:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:22:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:22:30.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:22:48.878 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:22:48.882 [http-nio-8080-exec-9] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:22:48.905 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:22:48.907 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:22:48.909 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 14:22:48.914 [http-nio-8080-exec-9] ERROR c.e.c.e.ExceptionResolver.accountNotFoundException - Account with id 7 not found
03-12-2023 14:23:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:23:00.021 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:23:00.025 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:23:00.031 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:23:00.033 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:23:30.063 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:23:30.070 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:23:30.071 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:23:30.075 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:23:30.077 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:23:30.329 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:23:44.767 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:23:44.769 [http-nio-8080-exec-1] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginstas
03-12-2023 14:23:44.805 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 order by a1_0.balance offset ? rows fetch first ? rows only
03-12-2023 14:23:44.808 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:23:44.809 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:24:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:24:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:24:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:24:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:24:00.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:24:14.201 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:24:14.202 [http-nio-8080-exec-2] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginstas
03-12-2023 14:24:14.207 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 order by a1_0.balance offset ? rows fetch first ? rows only
03-12-2023 14:24:14.217 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select count(a1_0.id) from accounts a1_0
03-12-2023 14:24:27.517 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:24:27.520 [http-nio-8080-exec-3] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginstas
03-12-2023 14:24:27.525 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 order by a1_0.balance offset ? rows fetch first ? rows only
03-12-2023 14:24:27.526 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:24:27.527 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:24:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:24:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:24:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:24:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:24:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:24:56.766 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 14:24:56.772 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
03-12-2023 14:24:56.775 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
03-12-2023 14:25:28.453 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 12845 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
03-12-2023 14:25:28.456 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
03-12-2023 14:25:29.566 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-12-2023 14:25:29.671 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 91 ms. Found 6 JPA repository interfaces.
03-12-2023 14:25:30.310 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-12-2023 14:25:30.323 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-12-2023 14:25:30.323 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
03-12-2023 14:25:30.549 [main] INFO  o.apache.jasper.servlet.TldScanner.log - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
03-12-2023 14:25:30.554 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-12-2023 14:25:30.554 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 2015 ms
03-12-2023 14:25:30.580 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-12-2023 14:25:30.938 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
03-12-2023 14:25:30.939 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-12-2023 14:25:30.950 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
03-12-2023 14:25:31.124 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
03-12-2023 14:25:31.379 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:25:31.383 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:25:31.386 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:25:31.389 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:25:31.394 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:25:31.395 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-12-2023 14:25:31.405 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
03-12-2023 14:25:31.409 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:25:31.410 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
03-12-2023 14:25:31.412 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:25:31.413 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:25:31.485 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:25:31.486 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 33ms
03-12-2023 14:25:31.490 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:25:31.492 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:25:31.494 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:25:31.495 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:25:31.496 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:25:31.502 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:25:31.503 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 6ms
03-12-2023 14:25:31.505 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:25:31.508 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:25:31.509 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:25:31.510 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:25:31.513 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:25:31.514 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:25:31.516 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:25:31.520 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:25:31.522 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 4ms
03-12-2023 14:25:31.523 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:25:31.528 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:25:31.529 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:25:31.530 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:25:31.533 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:25:31.534 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-security-credentials.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:25:31.536 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:25:31.537 [main] INFO  liquibase.log - Update command completed successfully.
03-12-2023 14:25:31.539 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:25:31.540 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-12-2023 14:25:31.639 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-12-2023 14:25:31.706 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
03-12-2023 14:25:31.710 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
03-12-2023 14:25:32.144 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
03-12-2023 14:25:32.199 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
03-12-2023 14:25:33.277 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
03-12-2023 14:25:33.313 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 14:25:33.582 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory.<clinit> - Hibernate is in classpath; If applicable, HQL parser will be used.
03-12-2023 14:25:34.038 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03-12-2023 14:25:34.187 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4c25687b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5c21b22e, org.springframework.security.web.context.SecurityContextHolderFilter@75e068dc, org.springframework.security.web.header.HeaderWriterFilter@2297c8bf, org.springframework.security.web.authentication.logout.LogoutFilter@33c5e52f, com.example.cryptoservice.security.filter.JwtAuthenticationFilter@29682244, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@268eefe7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4624e3d1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@184e5c44, org.springframework.security.web.session.SessionManagementFilter@53ccbc15, org.springframework.security.web.access.ExceptionTranslationFilter@35129b9e, org.springframework.security.web.access.intercept.AuthorizationFilter@73ac7716]
03-12-2023 14:25:34.623 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 14:25:34.623 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/v3/api-docs/**']
03-12-2023 14:25:34.624 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 14:25:34.624 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/swagger-ui/**']
03-12-2023 14:25:34.681 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
03-12-2023 14:25:34.691 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 6.829 seconds (process running for 7.476)
03-12-2023 14:25:50.499 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
03-12-2023 14:25:50.500 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
03-12-2023 14:25:50.502 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 1 ms
03-12-2023 14:25:50.771 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:26:00.035 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:26:00.044 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:26:00.045 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:26:00.076 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:26:00.081 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:26:08.892 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:26:08.898 [http-nio-8080-exec-3] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:26:09.003 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:26:09.016 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:26:09.022 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 14:26:09.026 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:26:09.027 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.currency_code=? and a1_0.account_type=? and a1_0.user_id=?
03-12-2023 14:26:09.035 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "com.example.cryptoservice.domain.Account.getId()" because "depAcc" is null] with root cause
java.lang.NullPointerException: Cannot invoke "com.example.cryptoservice.domain.Account.getId()" because "depAcc" is null
	at com.example.cryptoservice.service.TransactionServiceImpl.deposit(TransactionServiceImpl.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.example.cryptoservice.service.TransactionServiceImpl$$SpringCGLIB$$0.deposit(<generated>)
	at com.example.cryptoservice.controller.TransactionController.deposit(TransactionController.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.cryptoservice.security.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:44)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
03-12-2023 14:26:24.589 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 14:26:24.595 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
03-12-2023 14:26:24.597 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
03-12-2023 14:26:42.355 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 12866 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
03-12-2023 14:26:42.362 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
03-12-2023 14:26:43.463 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-12-2023 14:26:43.567 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 90 ms. Found 6 JPA repository interfaces.
03-12-2023 14:26:44.236 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-12-2023 14:26:44.250 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-12-2023 14:26:44.250 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
03-12-2023 14:26:44.444 [main] INFO  o.apache.jasper.servlet.TldScanner.log - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
03-12-2023 14:26:44.450 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-12-2023 14:26:44.451 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 2003 ms
03-12-2023 14:26:44.476 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-12-2023 14:26:44.835 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
03-12-2023 14:26:44.837 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-12-2023 14:26:44.847 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
03-12-2023 14:26:45.015 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
03-12-2023 14:26:45.257 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:26:45.260 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:26:45.263 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:26:45.266 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:26:45.270 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:26:45.271 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-12-2023 14:26:45.281 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
03-12-2023 14:26:45.284 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:26:45.285 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
03-12-2023 14:26:45.286 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:26:45.287 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:26:45.359 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:26:45.360 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 28ms
03-12-2023 14:26:45.363 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:26:45.364 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:26:45.368 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:26:45.369 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 4ms
03-12-2023 14:26:45.370 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:26:45.374 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:26:45.375 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 4ms
03-12-2023 14:26:45.376 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:26:45.379 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:26:45.380 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:26:45.381 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:26:45.384 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:26:45.385 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:26:45.386 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:26:45.389 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:26:45.390 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 2ms
03-12-2023 14:26:45.391 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:26:45.393 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:26:45.394 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 2ms
03-12-2023 14:26:45.395 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:26:45.398 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:26:45.399 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-security-credentials.sql::raw::includeAll ran successfully in 2ms
03-12-2023 14:26:45.400 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:26:45.401 [main] INFO  liquibase.log - Update command completed successfully.
03-12-2023 14:26:45.402 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:26:45.402 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-12-2023 14:26:45.483 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-12-2023 14:26:45.549 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
03-12-2023 14:26:45.552 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
03-12-2023 14:26:45.926 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
03-12-2023 14:26:45.979 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
03-12-2023 14:26:47.017 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
03-12-2023 14:26:47.056 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 14:26:47.329 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory.<clinit> - Hibernate is in classpath; If applicable, HQL parser will be used.
03-12-2023 14:26:47.851 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03-12-2023 14:26:48.024 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@20711b02, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@52d9a150, org.springframework.security.web.context.SecurityContextHolderFilter@4d62bb8b, org.springframework.security.web.header.HeaderWriterFilter@437a4e61, org.springframework.security.web.authentication.logout.LogoutFilter@6153aca1, com.example.cryptoservice.security.filter.JwtAuthenticationFilter@45fa7fb7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d642682, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@65630116, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@476a38d9, org.springframework.security.web.session.SessionManagementFilter@28d2afd8, org.springframework.security.web.access.ExceptionTranslationFilter@6ea1fc9, org.springframework.security.web.access.intercept.AuthorizationFilter@fffb4a8]
03-12-2023 14:26:48.458 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 14:26:48.458 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/v3/api-docs/**']
03-12-2023 14:26:48.459 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 14:26:48.459 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/swagger-ui/**']
03-12-2023 14:26:48.520 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
03-12-2023 14:26:48.534 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 6.793 seconds (process running for 7.453)
03-12-2023 14:27:00.157 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:27:00.173 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:27:00.182 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:27:00.229 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:27:00.236 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:27:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:27:30.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:27:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:27:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:27:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:27:54.616 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
03-12-2023 14:27:54.617 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
03-12-2023 14:27:54.618 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 1 ms
03-12-2023 14:27:54.896 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:27:54.921 [http-nio-8080-exec-2] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:27:55.223 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:27:55.238 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:27:55.243 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 14:27:55.251 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:27:55.252 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.currency_code=? and a1_0.account_type=? and a1_0.user_id=?
03-12-2023 14:27:55.278 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into transactions (account_id,amount,created,transaction_type,id) values (?,?,?,?,default)
03-12-2023 14:28:00.004 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:28:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:28:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:28:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:28:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:28:06.720 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:28:06.721 [http-nio-8080-exec-3] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:28:06.724 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:28:06.728 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.user_id=?
03-12-2023 14:28:06.729 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:28:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:28:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:28:30.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:28:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:28:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:29:00.004 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:29:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:29:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:29:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:29:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:29:30.026 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:29:30.029 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:29:30.047 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:29:30.049 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:29:30.051 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:30:00.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:30:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:30:00.018 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:30:00.019 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:30:00.020 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:30:04.260 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 14:30:04.272 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
03-12-2023 14:30:04.275 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
03-12-2023 14:34:21.224 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 13139 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
03-12-2023 14:34:21.228 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
03-12-2023 14:34:22.109 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-12-2023 14:34:22.214 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 95 ms. Found 6 JPA repository interfaces.
03-12-2023 14:34:22.829 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-12-2023 14:34:22.838 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-12-2023 14:34:22.838 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
03-12-2023 14:34:23.032 [main] INFO  o.apache.jasper.servlet.TldScanner.log - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
03-12-2023 14:34:23.039 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-12-2023 14:34:23.039 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1759 ms
03-12-2023 14:34:23.067 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-12-2023 14:34:23.390 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
03-12-2023 14:34:23.392 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-12-2023 14:34:23.402 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
03-12-2023 14:34:23.575 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
03-12-2023 14:34:23.849 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:34:23.852 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:34:23.859 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:34:23.862 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:34:23.867 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:34:23.868 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-12-2023 14:34:23.879 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
03-12-2023 14:34:23.883 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:34:23.884 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
03-12-2023 14:34:23.886 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:34:23.887 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:34:23.957 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:34:23.958 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 30ms
03-12-2023 14:34:23.962 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:34:23.964 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:34:23.967 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:34:23.968 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 2ms
03-12-2023 14:34:23.969 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:34:23.974 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:34:23.974 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 4ms
03-12-2023 14:34:23.976 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:34:23.981 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:34:23.983 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 4ms
03-12-2023 14:34:23.985 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:34:23.988 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:34:23.989 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:34:23.991 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:34:23.994 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:34:23.995 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:34:23.996 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:34:23.998 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:34:23.999 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 2ms
03-12-2023 14:34:24.000 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:34:24.005 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:34:24.006 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-security-credentials.sql::raw::includeAll ran successfully in 2ms
03-12-2023 14:34:24.007 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:34:24.008 [main] INFO  liquibase.log - Update command completed successfully.
03-12-2023 14:34:24.009 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:34:24.010 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-12-2023 14:34:24.089 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-12-2023 14:34:24.156 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
03-12-2023 14:34:24.160 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
03-12-2023 14:34:24.541 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
03-12-2023 14:34:24.600 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
03-12-2023 14:34:25.699 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
03-12-2023 14:34:25.733 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 14:34:26.002 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory.<clinit> - Hibernate is in classpath; If applicable, HQL parser will be used.
03-12-2023 14:34:26.498 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03-12-2023 14:34:26.670 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@20711b02, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@52d9a150, org.springframework.security.web.context.SecurityContextHolderFilter@4d62bb8b, org.springframework.security.web.header.HeaderWriterFilter@437a4e61, org.springframework.security.web.authentication.logout.LogoutFilter@6153aca1, com.example.cryptoservice.security.filter.JwtAuthenticationFilter@45fa7fb7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d642682, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@65630116, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@476a38d9, org.springframework.security.web.session.SessionManagementFilter@28d2afd8, org.springframework.security.web.access.ExceptionTranslationFilter@6ea1fc9, org.springframework.security.web.access.intercept.AuthorizationFilter@fffb4a8]
03-12-2023 14:34:27.110 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 14:34:27.110 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/v3/api-docs/**']
03-12-2023 14:34:27.111 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 14:34:27.111 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/swagger-ui/**']
03-12-2023 14:34:27.176 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
03-12-2023 14:34:27.189 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 6.487 seconds (process running for 7.419)
03-12-2023 14:34:30.185 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:34:30.305 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:34:30.315 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:34:30.352 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:34:30.356 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:34:36.591 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
03-12-2023 14:34:36.592 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
03-12-2023 14:34:36.595 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 3 ms
03-12-2023 14:34:36.701 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:34:36.707 [http-nio-8080-exec-1] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:34:36.913 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:34:36.927 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:34:36.932 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 14:34:36.936 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:34:36.937 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.currency_code=? and a1_0.account_type=? and a1_0.user_id=?
03-12-2023 14:34:36.946 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into accounts (account_type,balance,created,currency_code,user_id,id) values (?,?,?,?,?,default)
03-12-2023 14:34:36.953 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into transactions (account_id,amount,created,transaction_type,id) values (?,?,?,?,default)
03-12-2023 14:34:42.674 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:34:42.677 [http-nio-8080-exec-3] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:34:42.680 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:34:42.684 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.user_id=?
03-12-2023 14:34:42.685 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:34:52.179 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:34:52.184 [http-nio-8080-exec-4] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:34:52.195 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:34:52.199 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:34:52.201 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 14:34:52.204 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:34:52.210 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.id=? and a1_0.user_id=?
03-12-2023 14:34:52.211 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - insert into transactions (account_id,amount,created,transaction_type,id) values (?,?,?,?,default)
03-12-2023 14:34:52.214 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:34:52.215 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:34:57.121 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:34:57.122 [http-nio-8080-exec-5] INFO  c.e.c.s.f.JwtAuthenticationFilter.doFilterInternal - Authenticated user with loginsmith
03-12-2023 14:34:57.123 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - select user_id from security_credentials where login= ?
03-12-2023 14:34:57.125 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.user_id=?
03-12-2023 14:34:57.126 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:35:00.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:35:00.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:35:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:35:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:35:00.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:35:30.005 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:35:30.008 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:35:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:35:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:35:30.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:36:00.030 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:36:00.039 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:36:00.042 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:36:00.048 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:36:00.051 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:36:30.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:36:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:36:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:36:30.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:36:30.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:37:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:37:00.010 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:37:00.012 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:37:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:37:00.016 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:37:30.006 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:37:30.009 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:37:30.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:37:30.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:37:30.014 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:38:00.007 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:38:00.011 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:38:00.013 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:38:00.015 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:38:00.017 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:38:06.044 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 14:38:06.051 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
03-12-2023 14:38:06.056 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
03-12-2023 14:38:57.042 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 13194 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
03-12-2023 14:38:57.044 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
03-12-2023 14:38:57.897 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-12-2023 14:38:57.998 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 89 ms. Found 6 JPA repository interfaces.
03-12-2023 14:38:58.648 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-12-2023 14:38:58.662 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-12-2023 14:38:58.663 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
03-12-2023 14:38:58.882 [main] INFO  o.apache.jasper.servlet.TldScanner.log - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
03-12-2023 14:38:58.887 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-12-2023 14:38:58.888 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1802 ms
03-12-2023 14:38:58.916 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-12-2023 14:38:59.211 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
03-12-2023 14:38:59.212 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-12-2023 14:38:59.223 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
03-12-2023 14:38:59.389 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
03-12-2023 14:38:59.620 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:38:59.624 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:38:59.630 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:38:59.633 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:38:59.639 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:38:59.639 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-12-2023 14:38:59.650 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
03-12-2023 14:38:59.654 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:38:59.655 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
03-12-2023 14:38:59.656 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:38:59.657 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:38:59.723 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:38:59.724 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 28ms
03-12-2023 14:38:59.729 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:38:59.730 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:38:59.733 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:38:59.733 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 2ms
03-12-2023 14:38:59.735 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:38:59.744 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:38:59.745 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 9ms
03-12-2023 14:38:59.748 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:38:59.753 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:38:59.754 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 5ms
03-12-2023 14:38:59.756 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:38:59.764 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:38:59.765 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 7ms
03-12-2023 14:38:59.767 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:38:59.771 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:38:59.775 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:38:59.777 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:38:59.782 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:38:59.783 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:38:59.785 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:38:59.790 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:38:59.791 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-security-credentials.sql::raw::includeAll ran successfully in 5ms
03-12-2023 14:38:59.795 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:38:59.796 [main] INFO  liquibase.log - Update command completed successfully.
03-12-2023 14:38:59.800 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:38:59.800 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-12-2023 14:38:59.934 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-12-2023 14:39:00.028 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
03-12-2023 14:39:00.033 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
03-12-2023 14:39:00.413 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
03-12-2023 14:39:00.458 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
03-12-2023 14:39:01.526 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
03-12-2023 14:39:01.552 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 14:39:01.825 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory.<clinit> - Hibernate is in classpath; If applicable, HQL parser will be used.
03-12-2023 14:39:02.310 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03-12-2023 14:39:02.464 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7d1b96b9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@505bc480, org.springframework.security.web.context.SecurityContextHolderFilter@fee1e32, org.springframework.security.web.header.HeaderWriterFilter@c8e99, org.springframework.security.web.authentication.logout.LogoutFilter@47baf547, com.example.cryptoservice.security.filter.JwtAuthenticationFilter@7fb8d720, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50b1dfab, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@68c05c5b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@394a7390, org.springframework.security.web.session.SessionManagementFilter@598f6c93, org.springframework.security.web.access.ExceptionTranslationFilter@53b81a55, org.springframework.security.web.access.intercept.AuthorizationFilter@4e6c703a]
03-12-2023 14:39:02.928 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 14:39:02.928 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/v3/api-docs/**']
03-12-2023 14:39:02.928 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 14:39:02.928 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/swagger-ui/**']
03-12-2023 14:39:02.991 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
03-12-2023 14:39:03.003 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 6.506 seconds (process running for 7.308)
03-12-2023 14:39:15.145 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
03-12-2023 14:39:15.146 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
03-12-2023 14:39:15.150 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 3 ms
03-12-2023 14:39:30.167 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:39:30.184 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:39:30.194 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:39:30.233 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:39:30.239 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:39:34.463 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 14:39:34.467 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
03-12-2023 14:39:34.468 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
03-12-2023 14:39:49.238 [main] INFO  c.e.c.CryptoServiceApplication.logStarting - Starting CryptoServiceApplication using Java 17.0.1 with PID 13211 (/Users/allencooper/IdeaProjects/CryptoService/target/classes started by allencooper in /Users/allencooper/IdeaProjects/CryptoService)
03-12-2023 14:39:49.249 [main] INFO  c.e.c.CryptoServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
03-12-2023 14:39:50.129 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-12-2023 14:39:50.221 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 83 ms. Found 6 JPA repository interfaces.
03-12-2023 14:39:50.849 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-12-2023 14:39:50.860 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-12-2023 14:39:50.860 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.15]
03-12-2023 14:39:51.055 [main] INFO  o.apache.jasper.servlet.TldScanner.log - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
03-12-2023 14:39:51.062 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-12-2023 14:39:51.062 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1752 ms
03-12-2023 14:39:51.089 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-12-2023 14:39:51.415 [main] INFO  com.zaxxer.hikari.pool.HikariPool.checkFailFast - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=CRYPTO
03-12-2023 14:39:51.417 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-12-2023 14:39:51.429 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration.logDataSources - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
03-12-2023 14:39:51.597 [main] INFO  liquibase.database.log - Set default schema name to PUBLIC
03-12-2023 14:39:51.840 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:39:51.843 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:39:51.847 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:39:51.851 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:39:51.856 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:39:51.856 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-12-2023 14:39:51.866 [main] INFO  liquibase.changelog.log - Creating database history table with name: PUBLIC.DATABASECHANGELOG
03-12-2023 14:39:51.869 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:39:51.870 [main] INFO  liquibase.changelog.log - Reading from PUBLIC.DATABASECHANGELOG
03-12-2023 14:39:51.872 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:39:51.873 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:39:51.938 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:39:51.939 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/create-tables.sql::raw::includeAll ran successfully in 28ms
03-12-2023 14:39:51.943 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:39:51.944 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:39:51.947 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:39:51.948 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-users.sql::raw::includeAll ran successfully in 2ms
03-12-2023 14:39:51.949 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:39:51.953 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:39:51.953 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-accounts.sql::raw::includeAll ran successfully in 4ms
03-12-2023 14:39:51.955 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:39:51.958 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:39:51.959 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transactions.sql::raw::includeAll ran successfully in 4ms
03-12-2023 14:39:51.961 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:39:51.964 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:39:51.964 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-crypto-rates.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:39:51.966 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:39:51.968 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:39:51.969 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-unique-index.sql::raw::includeAll ran successfully in 3ms
03-12-2023 14:39:51.970 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:39:51.972 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:39:51.973 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-transaction-fees.sql::raw::includeAll ran successfully in 2ms
03-12-2023 14:39:51.974 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:39:51.976 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-12-2023 14:39:51.977 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/changeset/add-security-credentials.sql::raw::includeAll ran successfully in 2ms
03-12-2023 14:39:51.978 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:39:51.979 [main] INFO  liquibase.log - Update command completed successfully.
03-12-2023 14:39:51.980 [main] INFO  liquibase.executor.log - Changelog query completed.
03-12-2023 14:39:51.981 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-12-2023 14:39:52.065 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-12-2023 14:39:52.154 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 6.2.13.Final
03-12-2023 14:39:52.159 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000406: Using bytecode reflection optimizer
03-12-2023 14:39:52.511 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo.addTransformer - No LoadTimeWeaver setup: ignoring JPA class transformer
03-12-2023 14:39:52.562 [main] WARN  org.hibernate.orm.deprecation.constructDialect - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
03-12-2023 14:39:53.635 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
03-12-2023 14:39:53.673 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 14:39:53.928 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory.<clinit> - Hibernate is in classpath; If applicable, HQL parser will be used.
03-12-2023 14:39:54.435 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03-12-2023 14:39:54.580 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5120886f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e6c703a, org.springframework.security.web.context.SecurityContextHolderFilter@321bf4b1, org.springframework.security.web.header.HeaderWriterFilter@1784d711, org.springframework.security.web.authentication.logout.LogoutFilter@33ac7934, com.example.cryptoservice.security.filter.JwtAuthenticationFilter@505a48a2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@65630116, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@50b1dfab, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58d635de, org.springframework.security.web.session.SessionManagementFilter@70f37190, org.springframework.security.web.access.ExceptionTranslationFilter@704ca8a8, org.springframework.security.web.access.intercept.AuthorizationFilter@52d9a150]
03-12-2023 14:39:55.017 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 14:39:55.018 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/v3/api-docs/**']
03-12-2023 14:39:55.018 [main] WARN  o.s.s.c.a.web.builders.WebSecurity.performBuild - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
03-12-2023 14:39:55.018 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will not secure Ant [pattern='/swagger-ui/**']
03-12-2023 14:39:55.091 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
03-12-2023 14:39:55.104 [main] INFO  c.e.c.CryptoServiceApplication.logStarted - Started CryptoServiceApplication in 6.465 seconds (process running for 7.148)
03-12-2023 14:39:59.039 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
03-12-2023 14:39:59.039 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
03-12-2023 14:39:59.041 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 2 ms
03-12-2023 14:39:59.336 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select s1_0.id,s1_0.login,s1_0.password,s1_0.user_role,s1_0.user_id from security_credentials s1_0 where s1_0.login=?
03-12-2023 14:40:00.031 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select a1_0.id,a1_0.account_type,a1_0.balance,a1_0.created,a1_0.currency_code,a1_0.user_id from accounts a1_0 where a1_0.account_type=?
03-12-2023 14:40:00.161 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:40:00.163 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - select c1_0.id,c1_0.first_name,c1_0.last_name from crypto_users c1_0 where c1_0.id=?
03-12-2023 14:40:00.216 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:40:00.221 [scheduling-1] DEBUG org.hibernate.SQL.logStatement - update accounts set account_type=?,balance=?,created=?,currency_code=?,user_id=? where id=?
03-12-2023 14:40:04.197 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
03-12-2023 14:40:04.200 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
03-12-2023 14:40:04.202 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
